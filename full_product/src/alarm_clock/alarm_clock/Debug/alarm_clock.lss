
alarm_clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000070a  00800100  00001c72  00001d06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005b  0080080a  0080080a  00002410  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00002480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d8c  00000000  00000000  00002618  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000117d  00000000  00000000  000063a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001624  00000000  00000000  00007521  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  00008b48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cc4  00000000  00000000  00008fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e91  00000000  00000000  00009c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000bb21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	18 e0       	ldi	r17, 0x08	; 8
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e7       	ldi	r30, 0x72	; 114
      7c:	fc e1       	ldi	r31, 0x1C	; 28
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 30       	cpi	r26, 0x0A	; 10
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	28 e0       	ldi	r18, 0x08	; 8
      8c:	aa e0       	ldi	r26, 0x0A	; 10
      8e:	b8 e0       	ldi	r27, 0x08	; 8
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a5 36       	cpi	r26, 0x65	; 101
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 1f 09 	call	0x123e	; 0x123e <main>
      9e:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_ZN10AlarmClock11int_to_charEi>:
      a6:	9b 01       	movw	r18, r22
      a8:	6a 30       	cpi	r22, 0x0A	; 10
      aa:	71 05       	cpc	r23, r1
      ac:	ec f0       	brlt	.+58     	; 0xe8 <_ZN10AlarmClock11int_to_charEi+0x42>
      ae:	cb 01       	movw	r24, r22
      b0:	6a e0       	ldi	r22, 0x0A	; 10
      b2:	70 e0       	ldi	r23, 0x00	; 0
      b4:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__divmodhi4>
      b8:	ab 01       	movw	r20, r22
      ba:	40 5d       	subi	r20, 0xD0	; 208
      bc:	5f 4f       	sbci	r21, 0xFF	; 255
      be:	cb 01       	movw	r24, r22
      c0:	88 0f       	add	r24, r24
      c2:	99 1f       	adc	r25, r25
      c4:	66 0f       	add	r22, r22
      c6:	77 1f       	adc	r23, r23
      c8:	66 0f       	add	r22, r22
      ca:	77 1f       	adc	r23, r23
      cc:	66 0f       	add	r22, r22
      ce:	77 1f       	adc	r23, r23
      d0:	68 0f       	add	r22, r24
      d2:	79 1f       	adc	r23, r25
      d4:	c9 01       	movw	r24, r18
      d6:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__divmodhi4>
      da:	c0 96       	adiw	r24, 0x30	; 48
      dc:	e6 ea       	ldi	r30, 0xA6	; 166
      de:	f7 e0       	ldi	r31, 0x07	; 7
      e0:	40 83       	st	Z, r20
      e2:	81 83       	std	Z+1, r24	; 0x01
      e4:	cf 01       	movw	r24, r30
      e6:	08 95       	ret
      e8:	20 5d       	subi	r18, 0xD0	; 208
      ea:	3f 4f       	sbci	r19, 0xFF	; 255
      ec:	20 93 aa 07 	sts	0x07AA, r18	; 0x8007aa <GOT+0x34>
      f0:	89 ea       	ldi	r24, 0xA9	; 169
      f2:	97 e0       	ldi	r25, 0x07	; 7
      f4:	08 95       	ret

000000f6 <_ZN10AlarmClock11displayTimeEv>:
      f6:	cf 92       	push	r12
      f8:	df 92       	push	r13
      fa:	ef 92       	push	r14
      fc:	ff 92       	push	r15
      fe:	0f 93       	push	r16
     100:	1f 93       	push	r17
     102:	cf 93       	push	r28
     104:	df 93       	push	r29
     106:	8c 01       	movw	r16, r24
     108:	60 e0       	ldi	r22, 0x00	; 0
     10a:	85 e1       	ldi	r24, 0x15	; 21
     10c:	98 e0       	ldi	r25, 0x08	; 8
     10e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6ds13079read_timeEh>
     112:	7c 01       	movw	r14, r24
     114:	61 e0       	ldi	r22, 0x01	; 1
     116:	85 e1       	ldi	r24, 0x15	; 21
     118:	98 e0       	ldi	r25, 0x08	; 8
     11a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6ds13079read_timeEh>
     11e:	6c 01       	movw	r12, r24
     120:	62 e0       	ldi	r22, 0x02	; 2
     122:	85 e1       	ldi	r24, 0x15	; 21
     124:	98 e0       	ldi	r25, 0x08	; 8
     126:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6ds13079read_timeEh>
     12a:	bc 01       	movw	r22, r24
     12c:	c8 01       	movw	r24, r16
     12e:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10AlarmClock11int_to_charEi>
     132:	fc 01       	movw	r30, r24
     134:	20 81       	ld	r18, Z
     136:	cc ea       	ldi	r28, 0xAC	; 172
     138:	d7 e0       	ldi	r29, 0x07	; 7
     13a:	2c 83       	std	Y+4, r18	; 0x04
     13c:	81 81       	ldd	r24, Z+1	; 0x01
     13e:	8d 83       	std	Y+5, r24	; 0x05
     140:	b6 01       	movw	r22, r12
     142:	c8 01       	movw	r24, r16
     144:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10AlarmClock11int_to_charEi>
     148:	fc 01       	movw	r30, r24
     14a:	20 81       	ld	r18, Z
     14c:	2f 83       	std	Y+7, r18	; 0x07
     14e:	81 81       	ldd	r24, Z+1	; 0x01
     150:	88 87       	std	Y+8, r24	; 0x08
     152:	b7 01       	movw	r22, r14
     154:	c8 01       	movw	r24, r16
     156:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10AlarmClock11int_to_charEi>
     15a:	fc 01       	movw	r30, r24
     15c:	20 81       	ld	r18, Z
     15e:	2a 87       	std	Y+10, r18	; 0x0a
     160:	81 81       	ldd	r24, Z+1	; 0x01
     162:	8b 87       	std	Y+11, r24	; 0x0b
     164:	9e 01       	movw	r18, r28
     166:	40 e0       	ldi	r20, 0x00	; 0
     168:	60 e0       	ldi	r22, 0x00	; 0
     16a:	8f e0       	ldi	r24, 0x0F	; 15
     16c:	98 e0       	ldi	r25, 0x08	; 8
     16e:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     172:	2e eb       	ldi	r18, 0xBE	; 190
     174:	37 e0       	ldi	r19, 0x07	; 7
     176:	40 e0       	ldi	r20, 0x00	; 0
     178:	61 e0       	ldi	r22, 0x01	; 1
     17a:	8f e0       	ldi	r24, 0x0F	; 15
     17c:	98 e0       	ldi	r25, 0x08	; 8
     17e:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     182:	ff ef       	ldi	r31, 0xFF	; 255
     184:	29 e6       	ldi	r18, 0x69	; 105
     186:	88 e1       	ldi	r24, 0x18	; 24
     188:	f1 50       	subi	r31, 0x01	; 1
     18a:	20 40       	sbci	r18, 0x00	; 0
     18c:	80 40       	sbci	r24, 0x00	; 0
     18e:	e1 f7       	brne	.-8      	; 0x188 <_ZN10AlarmClock11displayTimeEv+0x92>
     190:	00 c0       	rjmp	.+0      	; 0x192 <_ZN10AlarmClock11displayTimeEv+0x9c>
     192:	00 00       	nop
     194:	32 9b       	sbis	0x06, 2	; 6
     196:	b8 cf       	rjmp	.-144    	; 0x108 <_ZN10AlarmClock11displayTimeEv+0x12>
     198:	df 91       	pop	r29
     19a:	cf 91       	pop	r28
     19c:	1f 91       	pop	r17
     19e:	0f 91       	pop	r16
     1a0:	ff 90       	pop	r15
     1a2:	ef 90       	pop	r14
     1a4:	df 90       	pop	r13
     1a6:	cf 90       	pop	r12
     1a8:	08 95       	ret

000001aa <_ZN10AlarmClock12setTimetoRTCEv>:
     1aa:	af 92       	push	r10
     1ac:	bf 92       	push	r11
     1ae:	cf 92       	push	r12
     1b0:	df 92       	push	r13
     1b2:	ef 92       	push	r14
     1b4:	ff 92       	push	r15
     1b6:	0f 93       	push	r16
     1b8:	1f 93       	push	r17
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
     1c2:	63 97       	sbiw	r28, 0x13	; 19
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	f8 94       	cli
     1c8:	de bf       	out	0x3e, r29	; 62
     1ca:	0f be       	out	0x3f, r0	; 63
     1cc:	cd bf       	out	0x3d, r28	; 61
     1ce:	8c e0       	ldi	r24, 0x0C	; 12
     1d0:	ea e9       	ldi	r30, 0x9A	; 154
     1d2:	f7 e0       	ldi	r31, 0x07	; 7
     1d4:	de 01       	movw	r26, r28
     1d6:	18 96       	adiw	r26, 0x08	; 8
     1d8:	01 90       	ld	r0, Z+
     1da:	0d 92       	st	X+, r0
     1dc:	8a 95       	dec	r24
     1de:	e1 f7       	brne	.-8      	; 0x1d8 <_ZN10AlarmClock12setTimetoRTCEv+0x2e>
     1e0:	8f e0       	ldi	r24, 0x0F	; 15
     1e2:	98 e0       	ldi	r25, 0x08	; 8
     1e4:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
     1e8:	23 ec       	ldi	r18, 0xC3	; 195
     1ea:	37 e0       	ldi	r19, 0x07	; 7
     1ec:	44 e0       	ldi	r20, 0x04	; 4
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	8f e0       	ldi	r24, 0x0F	; 15
     1f2:	98 e0       	ldi	r25, 0x08	; 8
     1f4:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     1f8:	2f ef       	ldi	r18, 0xFF	; 255
     1fa:	84 e3       	ldi	r24, 0x34	; 52
     1fc:	9c e0       	ldi	r25, 0x0C	; 12
     1fe:	21 50       	subi	r18, 0x01	; 1
     200:	80 40       	sbci	r24, 0x00	; 0
     202:	90 40       	sbci	r25, 0x00	; 0
     204:	e1 f7       	brne	.-8      	; 0x1fe <_ZN10AlarmClock12setTimetoRTCEv+0x54>
     206:	00 c0       	rjmp	.+0      	; 0x208 <_ZN10AlarmClock12setTimetoRTCEv+0x5e>
     208:	00 00       	nop
     20a:	00 e0       	ldi	r16, 0x00	; 0
     20c:	e1 2c       	mov	r14, r1
     20e:	f1 2c       	mov	r15, r1
     210:	a1 2c       	mov	r10, r1
     212:	b1 2c       	mov	r11, r1
     214:	c1 2c       	mov	r12, r1
     216:	d1 2c       	mov	r13, r1
     218:	07 30       	cpi	r16, 0x07	; 7
     21a:	08 f0       	brcs	.+2      	; 0x21e <_ZN10AlarmClock12setTimetoRTCEv+0x74>
     21c:	1c c1       	rjmp	.+568    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     21e:	8e e0       	ldi	r24, 0x0E	; 14
     220:	98 e0       	ldi	r25, 0x08	; 8
     222:	0e 94 a5 04 	call	0x94a	; 0x94a <_ZN7Get_key6GetKeyEv>
     226:	18 2f       	mov	r17, r24
     228:	81 30       	cpi	r24, 0x01	; 1
     22a:	99 f4       	brne	.+38     	; 0x252 <_ZN10AlarmClock12setTimetoRTCEv+0xa8>
     22c:	e0 2f       	mov	r30, r16
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	ee 0f       	add	r30, r30
     232:	ff 1f       	adc	r31, r31
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	8c 0f       	add	r24, r28
     23a:	9d 1f       	adc	r25, r29
     23c:	e8 0f       	add	r30, r24
     23e:	f9 1f       	adc	r31, r25
     240:	47 81       	ldd	r20, Z+7	; 0x07
     242:	2c ec       	ldi	r18, 0xCC	; 204
     244:	37 e0       	ldi	r19, 0x07	; 7
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	8f e0       	ldi	r24, 0x0F	; 15
     24a:	98 e0       	ldi	r25, 0x08	; 8
     24c:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     250:	c1 c0       	rjmp	.+386    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     252:	82 30       	cpi	r24, 0x02	; 2
     254:	99 f4       	brne	.+38     	; 0x27c <_ZN10AlarmClock12setTimetoRTCEv+0xd2>
     256:	e0 2f       	mov	r30, r16
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	ee 0f       	add	r30, r30
     25c:	ff 1f       	adc	r31, r31
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	8c 0f       	add	r24, r28
     264:	9d 1f       	adc	r25, r29
     266:	e8 0f       	add	r30, r24
     268:	f9 1f       	adc	r31, r25
     26a:	47 81       	ldd	r20, Z+7	; 0x07
     26c:	2e ec       	ldi	r18, 0xCE	; 206
     26e:	37 e0       	ldi	r19, 0x07	; 7
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	8f e0       	ldi	r24, 0x0F	; 15
     274:	98 e0       	ldi	r25, 0x08	; 8
     276:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     27a:	ac c0       	rjmp	.+344    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     27c:	83 30       	cpi	r24, 0x03	; 3
     27e:	99 f4       	brne	.+38     	; 0x2a6 <_ZN10AlarmClock12setTimetoRTCEv+0xfc>
     280:	e0 2f       	mov	r30, r16
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	ee 0f       	add	r30, r30
     286:	ff 1f       	adc	r31, r31
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	8c 0f       	add	r24, r28
     28e:	9d 1f       	adc	r25, r29
     290:	e8 0f       	add	r30, r24
     292:	f9 1f       	adc	r31, r25
     294:	47 81       	ldd	r20, Z+7	; 0x07
     296:	20 ed       	ldi	r18, 0xD0	; 208
     298:	37 e0       	ldi	r19, 0x07	; 7
     29a:	60 e0       	ldi	r22, 0x00	; 0
     29c:	8f e0       	ldi	r24, 0x0F	; 15
     29e:	98 e0       	ldi	r25, 0x08	; 8
     2a0:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     2a4:	97 c0       	rjmp	.+302    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     2a6:	84 30       	cpi	r24, 0x04	; 4
     2a8:	99 f4       	brne	.+38     	; 0x2d0 <_ZN10AlarmClock12setTimetoRTCEv+0x126>
     2aa:	e0 2f       	mov	r30, r16
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	ee 0f       	add	r30, r30
     2b0:	ff 1f       	adc	r31, r31
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	8c 0f       	add	r24, r28
     2b8:	9d 1f       	adc	r25, r29
     2ba:	e8 0f       	add	r30, r24
     2bc:	f9 1f       	adc	r31, r25
     2be:	47 81       	ldd	r20, Z+7	; 0x07
     2c0:	22 ed       	ldi	r18, 0xD2	; 210
     2c2:	37 e0       	ldi	r19, 0x07	; 7
     2c4:	60 e0       	ldi	r22, 0x00	; 0
     2c6:	8f e0       	ldi	r24, 0x0F	; 15
     2c8:	98 e0       	ldi	r25, 0x08	; 8
     2ca:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     2ce:	82 c0       	rjmp	.+260    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     2d0:	85 30       	cpi	r24, 0x05	; 5
     2d2:	99 f4       	brne	.+38     	; 0x2fa <_ZN10AlarmClock12setTimetoRTCEv+0x150>
     2d4:	e0 2f       	mov	r30, r16
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	ee 0f       	add	r30, r30
     2da:	ff 1f       	adc	r31, r31
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	8c 0f       	add	r24, r28
     2e2:	9d 1f       	adc	r25, r29
     2e4:	e8 0f       	add	r30, r24
     2e6:	f9 1f       	adc	r31, r25
     2e8:	47 81       	ldd	r20, Z+7	; 0x07
     2ea:	24 ed       	ldi	r18, 0xD4	; 212
     2ec:	37 e0       	ldi	r19, 0x07	; 7
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	8f e0       	ldi	r24, 0x0F	; 15
     2f2:	98 e0       	ldi	r25, 0x08	; 8
     2f4:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     2f8:	6d c0       	rjmp	.+218    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     2fa:	86 30       	cpi	r24, 0x06	; 6
     2fc:	99 f4       	brne	.+38     	; 0x324 <_ZN10AlarmClock12setTimetoRTCEv+0x17a>
     2fe:	e0 2f       	mov	r30, r16
     300:	f0 e0       	ldi	r31, 0x00	; 0
     302:	ee 0f       	add	r30, r30
     304:	ff 1f       	adc	r31, r31
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	8c 0f       	add	r24, r28
     30c:	9d 1f       	adc	r25, r29
     30e:	e8 0f       	add	r30, r24
     310:	f9 1f       	adc	r31, r25
     312:	47 81       	ldd	r20, Z+7	; 0x07
     314:	26 ed       	ldi	r18, 0xD6	; 214
     316:	37 e0       	ldi	r19, 0x07	; 7
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	8f e0       	ldi	r24, 0x0F	; 15
     31c:	98 e0       	ldi	r25, 0x08	; 8
     31e:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     322:	58 c0       	rjmp	.+176    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     324:	87 30       	cpi	r24, 0x07	; 7
     326:	99 f4       	brne	.+38     	; 0x34e <_ZN10AlarmClock12setTimetoRTCEv+0x1a4>
     328:	e0 2f       	mov	r30, r16
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	ee 0f       	add	r30, r30
     32e:	ff 1f       	adc	r31, r31
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	8c 0f       	add	r24, r28
     336:	9d 1f       	adc	r25, r29
     338:	e8 0f       	add	r30, r24
     33a:	f9 1f       	adc	r31, r25
     33c:	47 81       	ldd	r20, Z+7	; 0x07
     33e:	28 ed       	ldi	r18, 0xD8	; 216
     340:	37 e0       	ldi	r19, 0x07	; 7
     342:	60 e0       	ldi	r22, 0x00	; 0
     344:	8f e0       	ldi	r24, 0x0F	; 15
     346:	98 e0       	ldi	r25, 0x08	; 8
     348:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     34c:	43 c0       	rjmp	.+134    	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     34e:	88 30       	cpi	r24, 0x08	; 8
     350:	99 f4       	brne	.+38     	; 0x378 <_ZN10AlarmClock12setTimetoRTCEv+0x1ce>
     352:	e0 2f       	mov	r30, r16
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	ee 0f       	add	r30, r30
     358:	ff 1f       	adc	r31, r31
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	8c 0f       	add	r24, r28
     360:	9d 1f       	adc	r25, r29
     362:	e8 0f       	add	r30, r24
     364:	f9 1f       	adc	r31, r25
     366:	47 81       	ldd	r20, Z+7	; 0x07
     368:	2a ed       	ldi	r18, 0xDA	; 218
     36a:	37 e0       	ldi	r19, 0x07	; 7
     36c:	60 e0       	ldi	r22, 0x00	; 0
     36e:	8f e0       	ldi	r24, 0x0F	; 15
     370:	98 e0       	ldi	r25, 0x08	; 8
     372:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     376:	2e c0       	rjmp	.+92     	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     378:	89 30       	cpi	r24, 0x09	; 9
     37a:	99 f4       	brne	.+38     	; 0x3a2 <_ZN10AlarmClock12setTimetoRTCEv+0x1f8>
     37c:	e0 2f       	mov	r30, r16
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	ee 0f       	add	r30, r30
     382:	ff 1f       	adc	r31, r31
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	8c 0f       	add	r24, r28
     38a:	9d 1f       	adc	r25, r29
     38c:	e8 0f       	add	r30, r24
     38e:	f9 1f       	adc	r31, r25
     390:	47 81       	ldd	r20, Z+7	; 0x07
     392:	2c ed       	ldi	r18, 0xDC	; 220
     394:	37 e0       	ldi	r19, 0x07	; 7
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	8f e0       	ldi	r24, 0x0F	; 15
     39a:	98 e0       	ldi	r25, 0x08	; 8
     39c:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     3a0:	19 c0       	rjmp	.+50     	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     3a2:	8b 30       	cpi	r24, 0x0B	; 11
     3a4:	a1 f4       	brne	.+40     	; 0x3ce <_ZN10AlarmClock12setTimetoRTCEv+0x224>
     3a6:	e0 2f       	mov	r30, r16
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	ee 0f       	add	r30, r30
     3ac:	ff 1f       	adc	r31, r31
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	8c 0f       	add	r24, r28
     3b4:	9d 1f       	adc	r25, r29
     3b6:	e8 0f       	add	r30, r24
     3b8:	f9 1f       	adc	r31, r25
     3ba:	47 81       	ldd	r20, Z+7	; 0x07
     3bc:	2a ec       	ldi	r18, 0xCA	; 202
     3be:	37 e0       	ldi	r19, 0x07	; 7
     3c0:	60 e0       	ldi	r22, 0x00	; 0
     3c2:	8f e0       	ldi	r24, 0x0F	; 15
     3c4:	98 e0       	ldi	r25, 0x08	; 8
     3c6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     3ca:	10 e0       	ldi	r17, 0x00	; 0
     3cc:	03 c0       	rjmp	.+6      	; 0x3d4 <_ZN10AlarmClock12setTimetoRTCEv+0x22a>
     3ce:	32 9b       	sbis	0x06, 2	; 6
     3d0:	26 cf       	rjmp	.-436    	; 0x21e <_ZN10AlarmClock12setTimetoRTCEv+0x74>
     3d2:	08 e0       	ldi	r16, 0x08	; 8
     3d4:	01 11       	cpse	r16, r1
     3d6:	0f c0       	rjmp	.+30     	; 0x3f6 <_ZN10AlarmClock12setTimetoRTCEv+0x24c>
     3d8:	81 2f       	mov	r24, r17
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	9c 01       	movw	r18, r24
     3de:	22 0f       	add	r18, r18
     3e0:	33 1f       	adc	r19, r19
     3e2:	88 0f       	add	r24, r24
     3e4:	99 1f       	adc	r25, r25
     3e6:	88 0f       	add	r24, r24
     3e8:	99 1f       	adc	r25, r25
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	82 0f       	add	r24, r18
     3f0:	93 1f       	adc	r25, r19
     3f2:	e8 0e       	add	r14, r24
     3f4:	f9 1e       	adc	r15, r25
     3f6:	01 30       	cpi	r16, 0x01	; 1
     3f8:	11 f4       	brne	.+4      	; 0x3fe <_ZN10AlarmClock12setTimetoRTCEv+0x254>
     3fa:	e1 0e       	add	r14, r17
     3fc:	f1 1c       	adc	r15, r1
     3fe:	02 30       	cpi	r16, 0x02	; 2
     400:	79 f4       	brne	.+30     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     402:	81 2f       	mov	r24, r17
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	9c 01       	movw	r18, r24
     408:	22 0f       	add	r18, r18
     40a:	33 1f       	adc	r19, r19
     40c:	88 0f       	add	r24, r24
     40e:	99 1f       	adc	r25, r25
     410:	88 0f       	add	r24, r24
     412:	99 1f       	adc	r25, r25
     414:	88 0f       	add	r24, r24
     416:	99 1f       	adc	r25, r25
     418:	82 0f       	add	r24, r18
     41a:	93 1f       	adc	r25, r19
     41c:	a8 0e       	add	r10, r24
     41e:	b9 1e       	adc	r11, r25
     420:	03 30       	cpi	r16, 0x03	; 3
     422:	11 f4       	brne	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     424:	a1 0e       	add	r10, r17
     426:	b1 1c       	adc	r11, r1
     428:	04 30       	cpi	r16, 0x04	; 4
     42a:	79 f4       	brne	.+30     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     42c:	81 2f       	mov	r24, r17
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	9c 01       	movw	r18, r24
     432:	22 0f       	add	r18, r18
     434:	33 1f       	adc	r19, r19
     436:	88 0f       	add	r24, r24
     438:	99 1f       	adc	r25, r25
     43a:	88 0f       	add	r24, r24
     43c:	99 1f       	adc	r25, r25
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	82 0f       	add	r24, r18
     444:	93 1f       	adc	r25, r19
     446:	c8 0e       	add	r12, r24
     448:	d9 1e       	adc	r13, r25
     44a:	05 30       	cpi	r16, 0x05	; 5
     44c:	11 f4       	brne	.+4      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
     44e:	c1 0e       	add	r12, r17
     450:	d1 1c       	adc	r13, r1
     452:	0f 5f       	subi	r16, 0xFF	; 255
     454:	e1 ce       	rjmp	.-574    	; 0x218 <_ZN10AlarmClock12setTimetoRTCEv+0x6e>
     456:	b7 01       	movw	r22, r14
     458:	85 e1       	ldi	r24, 0x15	; 21
     45a:	98 e0       	ldi	r25, 0x08	; 8
     45c:	0e 94 87 04 	call	0x90e	; 0x90e <_ZN6ds130710dec_to_bcdEi>
     460:	18 2f       	mov	r17, r24
     462:	b5 01       	movw	r22, r10
     464:	85 e1       	ldi	r24, 0x15	; 21
     466:	98 e0       	ldi	r25, 0x08	; 8
     468:	0e 94 87 04 	call	0x90e	; 0x90e <_ZN6ds130710dec_to_bcdEi>
     46c:	08 2f       	mov	r16, r24
     46e:	b6 01       	movw	r22, r12
     470:	85 e1       	ldi	r24, 0x15	; 21
     472:	98 e0       	ldi	r25, 0x08	; 8
     474:	0e 94 87 04 	call	0x90e	; 0x90e <_ZN6ds130710dec_to_bcdEi>
     478:	89 83       	std	Y+1, r24	; 0x01
     47a:	0a 83       	std	Y+2, r16	; 0x02
     47c:	1b 83       	std	Y+3, r17	; 0x03
     47e:	87 e0       	ldi	r24, 0x07	; 7
     480:	8c 83       	std	Y+4, r24	; 0x04
     482:	80 e2       	ldi	r24, 0x20	; 32
     484:	8d 83       	std	Y+5, r24	; 0x05
     486:	86 e0       	ldi	r24, 0x06	; 6
     488:	8e 83       	std	Y+6, r24	; 0x06
     48a:	81 e2       	ldi	r24, 0x21	; 33
     48c:	8f 83       	std	Y+7, r24	; 0x07
     48e:	8f e0       	ldi	r24, 0x0F	; 15
     490:	98 e0       	ldi	r25, 0x08	; 8
     492:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
     496:	be 01       	movw	r22, r28
     498:	6f 5f       	subi	r22, 0xFF	; 255
     49a:	7f 4f       	sbci	r23, 0xFF	; 255
     49c:	85 e1       	ldi	r24, 0x15	; 21
     49e:	98 e0       	ldi	r25, 0x08	; 8
     4a0:	0e 94 18 04 	call	0x830	; 0x830 <_ZN6ds13078set_timeEPNS_5rtc_tE>
     4a4:	2e ed       	ldi	r18, 0xDE	; 222
     4a6:	37 e0       	ldi	r19, 0x07	; 7
     4a8:	40 e0       	ldi	r20, 0x00	; 0
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	8f e0       	ldi	r24, 0x0F	; 15
     4ae:	98 e0       	ldi	r25, 0x08	; 8
     4b0:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     4b4:	9f ef       	ldi	r25, 0xFF	; 255
     4b6:	24 e3       	ldi	r18, 0x34	; 52
     4b8:	8c e0       	ldi	r24, 0x0C	; 12
     4ba:	91 50       	subi	r25, 0x01	; 1
     4bc:	20 40       	sbci	r18, 0x00	; 0
     4be:	80 40       	sbci	r24, 0x00	; 0
     4c0:	e1 f7       	brne	.-8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4c4:	00 00       	nop
     4c6:	8f e0       	ldi	r24, 0x0F	; 15
     4c8:	98 e0       	ldi	r25, 0x08	; 8
     4ca:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
     4ce:	63 96       	adiw	r28, 0x13	; 19
     4d0:	0f b6       	in	r0, 0x3f	; 63
     4d2:	f8 94       	cli
     4d4:	de bf       	out	0x3e, r29	; 62
     4d6:	0f be       	out	0x3f, r0	; 63
     4d8:	cd bf       	out	0x3d, r28	; 61
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	1f 91       	pop	r17
     4e0:	0f 91       	pop	r16
     4e2:	ff 90       	pop	r15
     4e4:	ef 90       	pop	r14
     4e6:	df 90       	pop	r13
     4e8:	cf 90       	pop	r12
     4ea:	bf 90       	pop	r11
     4ec:	af 90       	pop	r10
     4ee:	08 95       	ret

000004f0 <_ZN10AlarmClock11setNewAlarmEv>:
     4f0:	cf 92       	push	r12
     4f2:	df 92       	push	r13
     4f4:	ef 92       	push	r14
     4f6:	ff 92       	push	r15
     4f8:	0f 93       	push	r16
     4fa:	1f 93       	push	r17
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	cd b7       	in	r28, 0x3d	; 61
     502:	de b7       	in	r29, 0x3e	; 62
     504:	2c 97       	sbiw	r28, 0x0c	; 12
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	fe 01       	movw	r30, r28
     512:	31 96       	adiw	r30, 0x01	; 1
     514:	8c e0       	ldi	r24, 0x0C	; 12
     516:	df 01       	movw	r26, r30
     518:	1d 92       	st	X+, r1
     51a:	8a 95       	dec	r24
     51c:	e9 f7       	brne	.-6      	; 0x518 <_ZN10AlarmClock11setNewAlarmEv+0x28>
     51e:	86 e0       	ldi	r24, 0x06	; 6
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	9a 83       	std	Y+2, r25	; 0x02
     524:	89 83       	std	Y+1, r24	; 0x01
     526:	87 e0       	ldi	r24, 0x07	; 7
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	9c 83       	std	Y+4, r25	; 0x04
     52c:	8b 83       	std	Y+3, r24	; 0x03
     52e:	89 e0       	ldi	r24, 0x09	; 9
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	9e 83       	std	Y+6, r25	; 0x06
     534:	8d 83       	std	Y+5, r24	; 0x05
     536:	8a e0       	ldi	r24, 0x0A	; 10
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	98 87       	std	Y+8, r25	; 0x08
     53c:	8f 83       	std	Y+7, r24	; 0x07
     53e:	8f e0       	ldi	r24, 0x0F	; 15
     540:	98 e0       	ldi	r25, 0x08	; 8
     542:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
     546:	26 ec       	ldi	r18, 0xC6	; 198
     548:	37 e0       	ldi	r19, 0x07	; 7
     54a:	46 e0       	ldi	r20, 0x06	; 6
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	8f e0       	ldi	r24, 0x0F	; 15
     550:	98 e0       	ldi	r25, 0x08	; 8
     552:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     556:	bf ef       	ldi	r27, 0xFF	; 255
     558:	21 ee       	ldi	r18, 0xE1	; 225
     55a:	84 e0       	ldi	r24, 0x04	; 4
     55c:	b1 50       	subi	r27, 0x01	; 1
     55e:	20 40       	sbci	r18, 0x00	; 0
     560:	80 40       	sbci	r24, 0x00	; 0
     562:	e1 f7       	brne	.-8      	; 0x55c <_ZN10AlarmClock11setNewAlarmEv+0x6c>
     564:	00 c0       	rjmp	.+0      	; 0x566 <_ZN10AlarmClock11setNewAlarmEv+0x76>
     566:	00 00       	nop
     568:	00 e0       	ldi	r16, 0x00	; 0
     56a:	e1 2c       	mov	r14, r1
     56c:	f1 2c       	mov	r15, r1
     56e:	c1 2c       	mov	r12, r1
     570:	d1 2c       	mov	r13, r1
     572:	05 30       	cpi	r16, 0x05	; 5
     574:	08 f0       	brcs	.+2      	; 0x578 <_ZN10AlarmClock11setNewAlarmEv+0x88>
     576:	07 c1       	rjmp	.+526    	; 0x786 <_ZN10AlarmClock11setNewAlarmEv+0x296>
     578:	8e e0       	ldi	r24, 0x0E	; 14
     57a:	98 e0       	ldi	r25, 0x08	; 8
     57c:	0e 94 a5 04 	call	0x94a	; 0x94a <_ZN7Get_key6GetKeyEv>
     580:	18 2f       	mov	r17, r24
     582:	81 30       	cpi	r24, 0x01	; 1
     584:	99 f4       	brne	.+38     	; 0x5ac <_ZN10AlarmClock11setNewAlarmEv+0xbc>
     586:	e0 2f       	mov	r30, r16
     588:	f0 e0       	ldi	r31, 0x00	; 0
     58a:	ee 0f       	add	r30, r30
     58c:	ff 1f       	adc	r31, r31
     58e:	a1 e0       	ldi	r26, 0x01	; 1
     590:	b0 e0       	ldi	r27, 0x00	; 0
     592:	ac 0f       	add	r26, r28
     594:	bd 1f       	adc	r27, r29
     596:	ea 0f       	add	r30, r26
     598:	fb 1f       	adc	r31, r27
     59a:	40 81       	ld	r20, Z
     59c:	2c ec       	ldi	r18, 0xCC	; 204
     59e:	37 e0       	ldi	r19, 0x07	; 7
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	8f e0       	ldi	r24, 0x0F	; 15
     5a4:	98 e0       	ldi	r25, 0x08	; 8
     5a6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     5aa:	c1 c0       	rjmp	.+386    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     5ac:	82 30       	cpi	r24, 0x02	; 2
     5ae:	99 f4       	brne	.+38     	; 0x5d6 <_ZN10AlarmClock11setNewAlarmEv+0xe6>
     5b0:	e0 2f       	mov	r30, r16
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	ee 0f       	add	r30, r30
     5b6:	ff 1f       	adc	r31, r31
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	8c 0f       	add	r24, r28
     5be:	9d 1f       	adc	r25, r29
     5c0:	e8 0f       	add	r30, r24
     5c2:	f9 1f       	adc	r31, r25
     5c4:	40 81       	ld	r20, Z
     5c6:	2e ec       	ldi	r18, 0xCE	; 206
     5c8:	37 e0       	ldi	r19, 0x07	; 7
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	8f e0       	ldi	r24, 0x0F	; 15
     5ce:	98 e0       	ldi	r25, 0x08	; 8
     5d0:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     5d4:	ac c0       	rjmp	.+344    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     5d6:	83 30       	cpi	r24, 0x03	; 3
     5d8:	99 f4       	brne	.+38     	; 0x600 <_ZN10AlarmClock11setNewAlarmEv+0x110>
     5da:	e0 2f       	mov	r30, r16
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	ee 0f       	add	r30, r30
     5e0:	ff 1f       	adc	r31, r31
     5e2:	a1 e0       	ldi	r26, 0x01	; 1
     5e4:	b0 e0       	ldi	r27, 0x00	; 0
     5e6:	ac 0f       	add	r26, r28
     5e8:	bd 1f       	adc	r27, r29
     5ea:	ea 0f       	add	r30, r26
     5ec:	fb 1f       	adc	r31, r27
     5ee:	40 81       	ld	r20, Z
     5f0:	20 ed       	ldi	r18, 0xD0	; 208
     5f2:	37 e0       	ldi	r19, 0x07	; 7
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	8f e0       	ldi	r24, 0x0F	; 15
     5f8:	98 e0       	ldi	r25, 0x08	; 8
     5fa:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     5fe:	97 c0       	rjmp	.+302    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     600:	84 30       	cpi	r24, 0x04	; 4
     602:	99 f4       	brne	.+38     	; 0x62a <_ZN10AlarmClock11setNewAlarmEv+0x13a>
     604:	e0 2f       	mov	r30, r16
     606:	f0 e0       	ldi	r31, 0x00	; 0
     608:	ee 0f       	add	r30, r30
     60a:	ff 1f       	adc	r31, r31
     60c:	81 e0       	ldi	r24, 0x01	; 1
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	8c 0f       	add	r24, r28
     612:	9d 1f       	adc	r25, r29
     614:	e8 0f       	add	r30, r24
     616:	f9 1f       	adc	r31, r25
     618:	40 81       	ld	r20, Z
     61a:	22 ed       	ldi	r18, 0xD2	; 210
     61c:	37 e0       	ldi	r19, 0x07	; 7
     61e:	60 e0       	ldi	r22, 0x00	; 0
     620:	8f e0       	ldi	r24, 0x0F	; 15
     622:	98 e0       	ldi	r25, 0x08	; 8
     624:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     628:	82 c0       	rjmp	.+260    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     62a:	85 30       	cpi	r24, 0x05	; 5
     62c:	99 f4       	brne	.+38     	; 0x654 <_ZN10AlarmClock11setNewAlarmEv+0x164>
     62e:	e0 2f       	mov	r30, r16
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	ee 0f       	add	r30, r30
     634:	ff 1f       	adc	r31, r31
     636:	a1 e0       	ldi	r26, 0x01	; 1
     638:	b0 e0       	ldi	r27, 0x00	; 0
     63a:	ac 0f       	add	r26, r28
     63c:	bd 1f       	adc	r27, r29
     63e:	ea 0f       	add	r30, r26
     640:	fb 1f       	adc	r31, r27
     642:	40 81       	ld	r20, Z
     644:	24 ed       	ldi	r18, 0xD4	; 212
     646:	37 e0       	ldi	r19, 0x07	; 7
     648:	60 e0       	ldi	r22, 0x00	; 0
     64a:	8f e0       	ldi	r24, 0x0F	; 15
     64c:	98 e0       	ldi	r25, 0x08	; 8
     64e:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     652:	6d c0       	rjmp	.+218    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     654:	86 30       	cpi	r24, 0x06	; 6
     656:	99 f4       	brne	.+38     	; 0x67e <_ZN10AlarmClock11setNewAlarmEv+0x18e>
     658:	e0 2f       	mov	r30, r16
     65a:	f0 e0       	ldi	r31, 0x00	; 0
     65c:	ee 0f       	add	r30, r30
     65e:	ff 1f       	adc	r31, r31
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	8c 0f       	add	r24, r28
     666:	9d 1f       	adc	r25, r29
     668:	e8 0f       	add	r30, r24
     66a:	f9 1f       	adc	r31, r25
     66c:	40 81       	ld	r20, Z
     66e:	26 ed       	ldi	r18, 0xD6	; 214
     670:	37 e0       	ldi	r19, 0x07	; 7
     672:	60 e0       	ldi	r22, 0x00	; 0
     674:	8f e0       	ldi	r24, 0x0F	; 15
     676:	98 e0       	ldi	r25, 0x08	; 8
     678:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     67c:	58 c0       	rjmp	.+176    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     67e:	87 30       	cpi	r24, 0x07	; 7
     680:	99 f4       	brne	.+38     	; 0x6a8 <_ZN10AlarmClock11setNewAlarmEv+0x1b8>
     682:	e0 2f       	mov	r30, r16
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	ee 0f       	add	r30, r30
     688:	ff 1f       	adc	r31, r31
     68a:	a1 e0       	ldi	r26, 0x01	; 1
     68c:	b0 e0       	ldi	r27, 0x00	; 0
     68e:	ac 0f       	add	r26, r28
     690:	bd 1f       	adc	r27, r29
     692:	ea 0f       	add	r30, r26
     694:	fb 1f       	adc	r31, r27
     696:	40 81       	ld	r20, Z
     698:	28 ed       	ldi	r18, 0xD8	; 216
     69a:	37 e0       	ldi	r19, 0x07	; 7
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	8f e0       	ldi	r24, 0x0F	; 15
     6a0:	98 e0       	ldi	r25, 0x08	; 8
     6a2:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     6a6:	43 c0       	rjmp	.+134    	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     6a8:	88 30       	cpi	r24, 0x08	; 8
     6aa:	99 f4       	brne	.+38     	; 0x6d2 <_ZN10AlarmClock11setNewAlarmEv+0x1e2>
     6ac:	e0 2f       	mov	r30, r16
     6ae:	f0 e0       	ldi	r31, 0x00	; 0
     6b0:	ee 0f       	add	r30, r30
     6b2:	ff 1f       	adc	r31, r31
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	8c 0f       	add	r24, r28
     6ba:	9d 1f       	adc	r25, r29
     6bc:	e8 0f       	add	r30, r24
     6be:	f9 1f       	adc	r31, r25
     6c0:	40 81       	ld	r20, Z
     6c2:	2a ed       	ldi	r18, 0xDA	; 218
     6c4:	37 e0       	ldi	r19, 0x07	; 7
     6c6:	60 e0       	ldi	r22, 0x00	; 0
     6c8:	8f e0       	ldi	r24, 0x0F	; 15
     6ca:	98 e0       	ldi	r25, 0x08	; 8
     6cc:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     6d0:	2e c0       	rjmp	.+92     	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     6d2:	89 30       	cpi	r24, 0x09	; 9
     6d4:	99 f4       	brne	.+38     	; 0x6fc <_ZN10AlarmClock11setNewAlarmEv+0x20c>
     6d6:	e0 2f       	mov	r30, r16
     6d8:	f0 e0       	ldi	r31, 0x00	; 0
     6da:	ee 0f       	add	r30, r30
     6dc:	ff 1f       	adc	r31, r31
     6de:	a1 e0       	ldi	r26, 0x01	; 1
     6e0:	b0 e0       	ldi	r27, 0x00	; 0
     6e2:	ac 0f       	add	r26, r28
     6e4:	bd 1f       	adc	r27, r29
     6e6:	ea 0f       	add	r30, r26
     6e8:	fb 1f       	adc	r31, r27
     6ea:	40 81       	ld	r20, Z
     6ec:	2c ed       	ldi	r18, 0xDC	; 220
     6ee:	37 e0       	ldi	r19, 0x07	; 7
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	8f e0       	ldi	r24, 0x0F	; 15
     6f4:	98 e0       	ldi	r25, 0x08	; 8
     6f6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     6fa:	19 c0       	rjmp	.+50     	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     6fc:	8b 30       	cpi	r24, 0x0B	; 11
     6fe:	a1 f4       	brne	.+40     	; 0x728 <_ZN10AlarmClock11setNewAlarmEv+0x238>
     700:	e0 2f       	mov	r30, r16
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	ee 0f       	add	r30, r30
     706:	ff 1f       	adc	r31, r31
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	8c 0f       	add	r24, r28
     70e:	9d 1f       	adc	r25, r29
     710:	e8 0f       	add	r30, r24
     712:	f9 1f       	adc	r31, r25
     714:	40 81       	ld	r20, Z
     716:	2a ec       	ldi	r18, 0xCA	; 202
     718:	37 e0       	ldi	r19, 0x07	; 7
     71a:	60 e0       	ldi	r22, 0x00	; 0
     71c:	8f e0       	ldi	r24, 0x0F	; 15
     71e:	98 e0       	ldi	r25, 0x08	; 8
     720:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
     724:	10 e0       	ldi	r17, 0x00	; 0
     726:	03 c0       	rjmp	.+6      	; 0x72e <_ZN10AlarmClock11setNewAlarmEv+0x23e>
     728:	32 9b       	sbis	0x06, 2	; 6
     72a:	26 cf       	rjmp	.-436    	; 0x578 <_ZN10AlarmClock11setNewAlarmEv+0x88>
     72c:	08 e0       	ldi	r16, 0x08	; 8
     72e:	01 11       	cpse	r16, r1
     730:	0f c0       	rjmp	.+30     	; 0x750 <_ZN10AlarmClock11setNewAlarmEv+0x260>
     732:	81 2f       	mov	r24, r17
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	9c 01       	movw	r18, r24
     738:	22 0f       	add	r18, r18
     73a:	33 1f       	adc	r19, r19
     73c:	88 0f       	add	r24, r24
     73e:	99 1f       	adc	r25, r25
     740:	88 0f       	add	r24, r24
     742:	99 1f       	adc	r25, r25
     744:	88 0f       	add	r24, r24
     746:	99 1f       	adc	r25, r25
     748:	82 0f       	add	r24, r18
     74a:	93 1f       	adc	r25, r19
     74c:	e8 0e       	add	r14, r24
     74e:	f9 1e       	adc	r15, r25
     750:	01 30       	cpi	r16, 0x01	; 1
     752:	11 f4       	brne	.+4      	; 0x758 <_ZN10AlarmClock11setNewAlarmEv+0x268>
     754:	e1 0e       	add	r14, r17
     756:	f1 1c       	adc	r15, r1
     758:	02 30       	cpi	r16, 0x02	; 2
     75a:	79 f4       	brne	.+30     	; 0x77a <_ZN10AlarmClock11setNewAlarmEv+0x28a>
     75c:	81 2f       	mov	r24, r17
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	9c 01       	movw	r18, r24
     762:	22 0f       	add	r18, r18
     764:	33 1f       	adc	r19, r19
     766:	88 0f       	add	r24, r24
     768:	99 1f       	adc	r25, r25
     76a:	88 0f       	add	r24, r24
     76c:	99 1f       	adc	r25, r25
     76e:	88 0f       	add	r24, r24
     770:	99 1f       	adc	r25, r25
     772:	82 0f       	add	r24, r18
     774:	93 1f       	adc	r25, r19
     776:	c8 0e       	add	r12, r24
     778:	d9 1e       	adc	r13, r25
     77a:	03 30       	cpi	r16, 0x03	; 3
     77c:	11 f4       	brne	.+4      	; 0x782 <_ZN10AlarmClock11setNewAlarmEv+0x292>
     77e:	c1 0e       	add	r12, r17
     780:	d1 1c       	adc	r13, r1
     782:	0f 5f       	subi	r16, 0xFF	; 255
     784:	f6 ce       	rjmp	.-532    	; 0x572 <_ZN10AlarmClock11setNewAlarmEv+0x82>
     786:	ea e0       	ldi	r30, 0x0A	; 10
     788:	f8 e0       	ldi	r31, 0x08	; 8
     78a:	f1 82       	std	Z+1, r15	; 0x01
     78c:	e0 82       	st	Z, r14
     78e:	d3 82       	std	Z+3, r13	; 0x03
     790:	c2 82       	std	Z+2, r12	; 0x02
     792:	cf 01       	movw	r24, r30
     794:	2c 96       	adiw	r28, 0x0c	; 12
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	de bf       	out	0x3e, r29	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	cd bf       	out	0x3d, r28	; 61
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	1f 91       	pop	r17
     7a6:	0f 91       	pop	r16
     7a8:	ff 90       	pop	r15
     7aa:	ef 90       	pop	r14
     7ac:	df 90       	pop	r13
     7ae:	cf 90       	pop	r12
     7b0:	08 95       	ret

000007b2 <_ZN6ds13078twi_initEv>:
     7b2:	88 e4       	ldi	r24, 0x48	; 72
     7b4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     7b8:	84 e0       	ldi	r24, 0x04	; 4
     7ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7be:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     7c2:	08 95       	ret

000007c4 <_ZN6ds13079twi_startEv>:
     7c4:	84 ea       	ldi	r24, 0xA4	; 164
     7c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7ce:	88 23       	and	r24, r24
     7d0:	e4 f7       	brge	.-8      	; 0x7ca <_ZN6ds13079twi_startEv+0x6>
     7d2:	08 95       	ret

000007d4 <_ZN6ds13079twi_SLA_WEv>:
     7d4:	80 ed       	ldi	r24, 0xD0	; 208
     7d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     7da:	84 e8       	ldi	r24, 0x84	; 132
     7dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7e0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7e4:	88 23       	and	r24, r24
     7e6:	e4 f7       	brge	.-8      	; 0x7e0 <_ZN6ds13079twi_SLA_WEv+0xc>
     7e8:	08 95       	ret

000007ea <_ZN6ds13079twi_SLA_REv>:
     7ea:	81 ed       	ldi	r24, 0xD1	; 209
     7ec:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     7f0:	84 e8       	ldi	r24, 0x84	; 132
     7f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7f6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     7fa:	88 23       	and	r24, r24
     7fc:	e4 f7       	brge	.-8      	; 0x7f6 <_ZN6ds13079twi_SLA_REv+0xc>
     7fe:	08 95       	ret

00000800 <_ZN6ds13079twi_writeEh>:
     800:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     804:	84 e8       	ldi	r24, 0x84	; 132
     806:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     80a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     80e:	88 23       	and	r24, r24
     810:	e4 f7       	brge	.-8      	; 0x80a <_ZN6ds13079twi_writeEh+0xa>
     812:	08 95       	ret

00000814 <_ZN6ds13078twi_readEv>:
     814:	84 e8       	ldi	r24, 0x84	; 132
     816:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     81a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     81e:	88 23       	and	r24, r24
     820:	e4 f7       	brge	.-8      	; 0x81a <_ZN6ds13078twi_readEv+0x6>
     822:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     826:	08 95       	ret

00000828 <_ZN6ds13078twi_stopEv>:
     828:	84 e9       	ldi	r24, 0x94	; 148
     82a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     82e:	08 95       	ret

00000830 <_ZN6ds13078set_timeEPNS_5rtc_tE>:
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	8c 01       	movw	r16, r24
     83a:	eb 01       	movw	r28, r22
     83c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <_ZN6ds13078twi_initEv>
     840:	c8 01       	movw	r24, r16
     842:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN6ds13079twi_startEv>
     846:	c8 01       	movw	r24, r16
     848:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <_ZN6ds13079twi_SLA_WEv>
     84c:	60 e0       	ldi	r22, 0x00	; 0
     84e:	c8 01       	movw	r24, r16
     850:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     854:	68 81       	ld	r22, Y
     856:	c8 01       	movw	r24, r16
     858:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     85c:	69 81       	ldd	r22, Y+1	; 0x01
     85e:	c8 01       	movw	r24, r16
     860:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     864:	6a 81       	ldd	r22, Y+2	; 0x02
     866:	c8 01       	movw	r24, r16
     868:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     86c:	6b 81       	ldd	r22, Y+3	; 0x03
     86e:	c8 01       	movw	r24, r16
     870:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     874:	6c 81       	ldd	r22, Y+4	; 0x04
     876:	c8 01       	movw	r24, r16
     878:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     87c:	6d 81       	ldd	r22, Y+5	; 0x05
     87e:	c8 01       	movw	r24, r16
     880:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     884:	6e 81       	ldd	r22, Y+6	; 0x06
     886:	c8 01       	movw	r24, r16
     888:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     88c:	c8 01       	movw	r24, r16
     88e:	0e 94 14 04 	call	0x828	; 0x828 <_ZN6ds13078twi_stopEv>
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	08 95       	ret

0000089c <_ZN6ds130710bcd_to_decEh>:
     89c:	26 2f       	mov	r18, r22
     89e:	2f 70       	andi	r18, 0x0F	; 15
     8a0:	62 95       	swap	r22
     8a2:	6f 70       	andi	r22, 0x0F	; 15
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	cb 01       	movw	r24, r22
     8a8:	88 0f       	add	r24, r24
     8aa:	99 1f       	adc	r25, r25
     8ac:	66 0f       	add	r22, r22
     8ae:	77 1f       	adc	r23, r23
     8b0:	66 0f       	add	r22, r22
     8b2:	77 1f       	adc	r23, r23
     8b4:	66 0f       	add	r22, r22
     8b6:	77 1f       	adc	r23, r23
     8b8:	86 0f       	add	r24, r22
     8ba:	97 1f       	adc	r25, r23
     8bc:	82 0f       	add	r24, r18
     8be:	91 1d       	adc	r25, r1
     8c0:	08 95       	ret

000008c2 <_ZN6ds13079read_timeEh>:
     8c2:	1f 93       	push	r17
     8c4:	cf 93       	push	r28
     8c6:	df 93       	push	r29
     8c8:	ec 01       	movw	r28, r24
     8ca:	16 2f       	mov	r17, r22
     8cc:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN6ds13079twi_startEv>
     8d0:	ce 01       	movw	r24, r28
     8d2:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <_ZN6ds13079twi_SLA_WEv>
     8d6:	61 2f       	mov	r22, r17
     8d8:	ce 01       	movw	r24, r28
     8da:	0e 94 00 04 	call	0x800	; 0x800 <_ZN6ds13079twi_writeEh>
     8de:	ce 01       	movw	r24, r28
     8e0:	0e 94 14 04 	call	0x828	; 0x828 <_ZN6ds13078twi_stopEv>
     8e4:	ce 01       	movw	r24, r28
     8e6:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN6ds13079twi_startEv>
     8ea:	ce 01       	movw	r24, r28
     8ec:	0e 94 f5 03 	call	0x7ea	; 0x7ea <_ZN6ds13079twi_SLA_REv>
     8f0:	ce 01       	movw	r24, r28
     8f2:	0e 94 0a 04 	call	0x814	; 0x814 <_ZN6ds13078twi_readEv>
     8f6:	18 2f       	mov	r17, r24
     8f8:	ce 01       	movw	r24, r28
     8fa:	0e 94 14 04 	call	0x828	; 0x828 <_ZN6ds13078twi_stopEv>
     8fe:	61 2f       	mov	r22, r17
     900:	ce 01       	movw	r24, r28
     902:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN6ds130710bcd_to_decEh>
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	1f 91       	pop	r17
     90c:	08 95       	ret

0000090e <_ZN6ds130710dec_to_bcdEi>:
     90e:	9b 01       	movw	r18, r22
     910:	6a 30       	cpi	r22, 0x0A	; 10
     912:	71 05       	cpc	r23, r1
     914:	c4 f0       	brlt	.+48     	; 0x946 <_ZN6ds130710dec_to_bcdEi+0x38>
     916:	cb 01       	movw	r24, r22
     918:	6a e0       	ldi	r22, 0x0A	; 10
     91a:	70 e0       	ldi	r23, 0x00	; 0
     91c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__divmodhi4>
     920:	46 2f       	mov	r20, r22
     922:	42 95       	swap	r20
     924:	40 7f       	andi	r20, 0xF0	; 240
     926:	86 2f       	mov	r24, r22
     928:	97 2f       	mov	r25, r23
     92a:	88 0f       	add	r24, r24
     92c:	99 1f       	adc	r25, r25
     92e:	bc 01       	movw	r22, r24
     930:	66 0f       	add	r22, r22
     932:	77 1f       	adc	r23, r23
     934:	66 0f       	add	r22, r22
     936:	77 1f       	adc	r23, r23
     938:	68 0f       	add	r22, r24
     93a:	79 1f       	adc	r23, r25
     93c:	c9 01       	movw	r24, r18
     93e:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__divmodhi4>
     942:	84 2b       	or	r24, r20
     944:	08 95       	ret
     946:	86 2f       	mov	r24, r22
     948:	08 95       	ret

0000094a <_ZN7Get_key6GetKeyEv>:
     94a:	8b b1       	in	r24, 0x0b	; 11
     94c:	8f 60       	ori	r24, 0x0F	; 15
     94e:	8b b9       	out	0x0b, r24	; 11
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	83 30       	cpi	r24, 0x03	; 3
     954:	80 f5       	brcc	.+96     	; 0x9b6 <_ZN7Get_key6GetKeyEv+0x6c>
     956:	9a b1       	in	r25, 0x0a	; 10
     958:	90 78       	andi	r25, 0x80	; 128
     95a:	9a b9       	out	0x0a, r25	; 10
     95c:	9a b1       	in	r25, 0x0a	; 10
     95e:	20 e4       	ldi	r18, 0x40	; 64
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	08 2e       	mov	r0, r24
     964:	02 c0       	rjmp	.+4      	; 0x96a <_ZN7Get_key6GetKeyEv+0x20>
     966:	35 95       	asr	r19
     968:	27 95       	ror	r18
     96a:	0a 94       	dec	r0
     96c:	e2 f7       	brpl	.-8      	; 0x966 <_ZN7Get_key6GetKeyEv+0x1c>
     96e:	29 2b       	or	r18, r25
     970:	2a b9       	out	0x0a, r18	; 10
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	94 30       	cpi	r25, 0x04	; 4
     976:	e8 f4       	brcc	.+58     	; 0x9b2 <_ZN7Get_key6GetKeyEv+0x68>
     978:	29 b1       	in	r18, 0x09	; 9
     97a:	48 e0       	ldi	r20, 0x08	; 8
     97c:	50 e0       	ldi	r21, 0x00	; 0
     97e:	09 2e       	mov	r0, r25
     980:	02 c0       	rjmp	.+4      	; 0x986 <_ZN7Get_key6GetKeyEv+0x3c>
     982:	55 95       	asr	r21
     984:	47 95       	ror	r20
     986:	0a 94       	dec	r0
     988:	e2 f7       	brpl	.-8      	; 0x982 <_ZN7Get_key6GetKeyEv+0x38>
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	24 23       	and	r18, r20
     98e:	35 23       	and	r19, r21
     990:	23 2b       	or	r18, r19
     992:	69 f4       	brne	.+26     	; 0x9ae <_ZN7Get_key6GetKeyEv+0x64>
     994:	29 b1       	in	r18, 0x09	; 9
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	24 23       	and	r18, r20
     99a:	35 23       	and	r19, r21
     99c:	23 2b       	or	r18, r19
     99e:	d1 f3       	breq	.-12     	; 0x994 <_ZN7Get_key6GetKeyEv+0x4a>
     9a0:	29 2f       	mov	r18, r25
     9a2:	22 0f       	add	r18, r18
     9a4:	92 0f       	add	r25, r18
     9a6:	98 0f       	add	r25, r24
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	89 0f       	add	r24, r25
     9ac:	08 95       	ret
     9ae:	9f 5f       	subi	r25, 0xFF	; 255
     9b0:	e1 cf       	rjmp	.-62     	; 0x974 <_ZN7Get_key6GetKeyEv+0x2a>
     9b2:	8f 5f       	subi	r24, 0xFF	; 255
     9b4:	ce cf       	rjmp	.-100    	; 0x952 <_ZN7Get_key6GetKeyEv+0x8>
     9b6:	8f ef       	ldi	r24, 0xFF	; 255
     9b8:	08 95       	ret

000009ba <_ZN11LCD_Display16LCD_CommandgiverEh>:
     9ba:	25 b1       	in	r18, 0x05	; 5
     9bc:	96 2f       	mov	r25, r22
     9be:	90 7f       	andi	r25, 0xF0	; 240
     9c0:	89 2f       	mov	r24, r25
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	95 95       	asr	r25
     9c6:	87 95       	ror	r24
     9c8:	95 95       	asr	r25
     9ca:	87 95       	ror	r24
     9cc:	92 2f       	mov	r25, r18
     9ce:	93 7c       	andi	r25, 0xC3	; 195
     9d0:	89 2b       	or	r24, r25
     9d2:	85 b9       	out	0x05, r24	; 5
     9d4:	85 b1       	in	r24, 0x05	; 5
     9d6:	8e 7f       	andi	r24, 0xFE	; 254
     9d8:	85 b9       	out	0x05, r24	; 5
     9da:	85 b1       	in	r24, 0x05	; 5
     9dc:	82 60       	ori	r24, 0x02	; 2
     9de:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9e0:	85 e0       	ldi	r24, 0x05	; 5
     9e2:	8a 95       	dec	r24
     9e4:	f1 f7       	brne	.-4      	; 0x9e2 <_ZN11LCD_Display16LCD_CommandgiverEh+0x28>
     9e6:	00 00       	nop
     9e8:	85 b1       	in	r24, 0x05	; 5
     9ea:	8d 7f       	andi	r24, 0xFD	; 253
     9ec:	85 b9       	out	0x05, r24	; 5
     9ee:	8f e8       	ldi	r24, 0x8F	; 143
     9f0:	91 e0       	ldi	r25, 0x01	; 1
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	f1 f7       	brne	.-4      	; 0x9f2 <_ZN11LCD_Display16LCD_CommandgiverEh+0x38>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <_ZN11LCD_Display16LCD_CommandgiverEh+0x3e>
     9f8:	00 00       	nop
     9fa:	85 b1       	in	r24, 0x05	; 5
     9fc:	6f 70       	andi	r22, 0x0F	; 15
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	66 0f       	add	r22, r22
     a02:	77 1f       	adc	r23, r23
     a04:	66 0f       	add	r22, r22
     a06:	77 1f       	adc	r23, r23
     a08:	83 7c       	andi	r24, 0xC3	; 195
     a0a:	68 2b       	or	r22, r24
     a0c:	65 b9       	out	0x05, r22	; 5
     a0e:	85 b1       	in	r24, 0x05	; 5
     a10:	82 60       	ori	r24, 0x02	; 2
     a12:	85 b9       	out	0x05, r24	; 5
     a14:	95 e0       	ldi	r25, 0x05	; 5
     a16:	9a 95       	dec	r25
     a18:	f1 f7       	brne	.-4      	; 0xa16 <_ZN11LCD_Display16LCD_CommandgiverEh+0x5c>
     a1a:	00 00       	nop
     a1c:	85 b1       	in	r24, 0x05	; 5
     a1e:	8d 7f       	andi	r24, 0xFD	; 253
     a20:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a22:	8f e9       	ldi	r24, 0x9F	; 159
     a24:	9f e0       	ldi	r25, 0x0F	; 15
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	f1 f7       	brne	.-4      	; 0xa26 <_ZN11LCD_Display16LCD_CommandgiverEh+0x6c>
     a2a:	00 c0       	rjmp	.+0      	; 0xa2c <_ZN11LCD_Display16LCD_CommandgiverEh+0x72>
     a2c:	00 00       	nop
     a2e:	08 95       	ret

00000a30 <_ZN11LCD_Display15LCD_InitializerEv>:
     a30:	cf 93       	push	r28
     a32:	df 93       	push	r29
     a34:	ec 01       	movw	r28, r24
     a36:	8f ef       	ldi	r24, 0xFF	; 255
     a38:	84 b9       	out	0x04, r24	; 4
     a3a:	8f e3       	ldi	r24, 0x3F	; 63
     a3c:	9c e9       	ldi	r25, 0x9C	; 156
     a3e:	01 97       	sbiw	r24, 0x01	; 1
     a40:	f1 f7       	brne	.-4      	; 0xa3e <_ZN11LCD_Display15LCD_InitializerEv+0xe>
     a42:	00 c0       	rjmp	.+0      	; 0xa44 <_ZN11LCD_Display15LCD_InitializerEv+0x14>
     a44:	00 00       	nop
     a46:	62 e0       	ldi	r22, 0x02	; 2
     a48:	ce 01       	movw	r24, r28
     a4a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     a4e:	68 e2       	ldi	r22, 0x28	; 40
     a50:	ce 01       	movw	r24, r28
     a52:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     a56:	6c e0       	ldi	r22, 0x0C	; 12
     a58:	ce 01       	movw	r24, r28
     a5a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     a5e:	66 e0       	ldi	r22, 0x06	; 6
     a60:	ce 01       	movw	r24, r28
     a62:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     a66:	61 e0       	ldi	r22, 0x01	; 1
     a68:	ce 01       	movw	r24, r28
     a6a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     a6e:	8f e9       	ldi	r24, 0x9F	; 159
     a70:	9f e0       	ldi	r25, 0x0F	; 15
     a72:	01 97       	sbiw	r24, 0x01	; 1
     a74:	f1 f7       	brne	.-4      	; 0xa72 <_ZN11LCD_Display15LCD_InitializerEv+0x42>
     a76:	00 c0       	rjmp	.+0      	; 0xa78 <_ZN11LCD_Display15LCD_InitializerEv+0x48>
     a78:	00 00       	nop
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <_ZN11LCD_Display13LCD_CharacterEh>:
     a80:	25 b1       	in	r18, 0x05	; 5
     a82:	96 2f       	mov	r25, r22
     a84:	90 7f       	andi	r25, 0xF0	; 240
     a86:	89 2f       	mov	r24, r25
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	95 95       	asr	r25
     a8c:	87 95       	ror	r24
     a8e:	95 95       	asr	r25
     a90:	87 95       	ror	r24
     a92:	92 2f       	mov	r25, r18
     a94:	93 7c       	andi	r25, 0xC3	; 195
     a96:	89 2b       	or	r24, r25
     a98:	85 b9       	out	0x05, r24	; 5
     a9a:	85 b1       	in	r24, 0x05	; 5
     a9c:	81 60       	ori	r24, 0x01	; 1
     a9e:	85 b9       	out	0x05, r24	; 5
     aa0:	85 b1       	in	r24, 0x05	; 5
     aa2:	82 60       	ori	r24, 0x02	; 2
     aa4:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     aa6:	82 e0       	ldi	r24, 0x02	; 2
     aa8:	8a 95       	dec	r24
     aaa:	f1 f7       	brne	.-4      	; 0xaa8 <_ZN11LCD_Display13LCD_CharacterEh+0x28>
     aac:	00 c0       	rjmp	.+0      	; 0xaae <_ZN11LCD_Display13LCD_CharacterEh+0x2e>
     aae:	85 b1       	in	r24, 0x05	; 5
     ab0:	8d 7f       	andi	r24, 0xFD	; 253
     ab2:	85 b9       	out	0x05, r24	; 5
     ab4:	8f e8       	ldi	r24, 0x8F	; 143
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	01 97       	sbiw	r24, 0x01	; 1
     aba:	f1 f7       	brne	.-4      	; 0xab8 <_ZN11LCD_Display13LCD_CharacterEh+0x38>
     abc:	00 c0       	rjmp	.+0      	; 0xabe <_ZN11LCD_Display13LCD_CharacterEh+0x3e>
     abe:	00 00       	nop
     ac0:	85 b1       	in	r24, 0x05	; 5
     ac2:	6f 70       	andi	r22, 0x0F	; 15
     ac4:	70 e0       	ldi	r23, 0x00	; 0
     ac6:	66 0f       	add	r22, r22
     ac8:	77 1f       	adc	r23, r23
     aca:	66 0f       	add	r22, r22
     acc:	77 1f       	adc	r23, r23
     ace:	83 7c       	andi	r24, 0xC3	; 195
     ad0:	68 2b       	or	r22, r24
     ad2:	65 b9       	out	0x05, r22	; 5
     ad4:	85 b1       	in	r24, 0x05	; 5
     ad6:	82 60       	ori	r24, 0x02	; 2
     ad8:	85 b9       	out	0x05, r24	; 5
     ada:	92 e0       	ldi	r25, 0x02	; 2
     adc:	9a 95       	dec	r25
     ade:	f1 f7       	brne	.-4      	; 0xadc <_ZN11LCD_Display13LCD_CharacterEh+0x5c>
     ae0:	00 c0       	rjmp	.+0      	; 0xae2 <_ZN11LCD_Display13LCD_CharacterEh+0x62>
     ae2:	85 b1       	in	r24, 0x05	; 5
     ae4:	8d 7f       	andi	r24, 0xFD	; 253
     ae6:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ae8:	8f e9       	ldi	r24, 0x9F	; 159
     aea:	9f e0       	ldi	r25, 0x0F	; 15
     aec:	01 97       	sbiw	r24, 0x01	; 1
     aee:	f1 f7       	brne	.-4      	; 0xaec <_ZN11LCD_Display13LCD_CharacterEh+0x6c>
     af0:	00 c0       	rjmp	.+0      	; 0xaf2 <_ZN11LCD_Display13LCD_CharacterEh+0x72>
     af2:	00 00       	nop
     af4:	08 95       	ret

00000af6 <_ZN11LCD_Display10LCD_StringEPc>:
     af6:	ef 92       	push	r14
     af8:	ff 92       	push	r15
     afa:	0f 93       	push	r16
     afc:	1f 93       	push	r17
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	7c 01       	movw	r14, r24
     b04:	8b 01       	movw	r16, r22
     b06:	c0 e0       	ldi	r28, 0x00	; 0
     b08:	d0 e0       	ldi	r29, 0x00	; 0
     b0a:	f8 01       	movw	r30, r16
     b0c:	ec 0f       	add	r30, r28
     b0e:	fd 1f       	adc	r31, r29
     b10:	60 81       	ld	r22, Z
     b12:	66 23       	and	r22, r22
     b14:	29 f0       	breq	.+10     	; 0xb20 <_ZN11LCD_Display10LCD_StringEPc+0x2a>
     b16:	c7 01       	movw	r24, r14
     b18:	0e 94 40 05 	call	0xa80	; 0xa80 <_ZN11LCD_Display13LCD_CharacterEh>
     b1c:	21 96       	adiw	r28, 0x01	; 1
     b1e:	f5 cf       	rjmp	.-22     	; 0xb0a <_ZN11LCD_Display10LCD_StringEPc+0x14>
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	1f 91       	pop	r17
     b26:	0f 91       	pop	r16
     b28:	ff 90       	pop	r15
     b2a:	ef 90       	pop	r14
     b2c:	08 95       	ret

00000b2e <_ZN11LCD_Display9LCD_ClearEv>:
     b2e:	cf 93       	push	r28
     b30:	df 93       	push	r29
     b32:	ec 01       	movw	r28, r24
     b34:	61 e0       	ldi	r22, 0x01	; 1
     b36:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     b3a:	8f e9       	ldi	r24, 0x9F	; 159
     b3c:	9f e0       	ldi	r25, 0x0F	; 15
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	f1 f7       	brne	.-4      	; 0xb3e <_ZN11LCD_Display9LCD_ClearEv+0x10>
     b42:	00 c0       	rjmp	.+0      	; 0xb44 <_ZN11LCD_Display9LCD_ClearEv+0x16>
     b44:	00 00       	nop
     b46:	60 e8       	ldi	r22, 0x80	; 128
     b48:	ce 01       	movw	r24, r28
     b4a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     b4e:	df 91       	pop	r29
     b50:	cf 91       	pop	r28
     b52:	08 95       	ret

00000b54 <_ZN11LCD_Display13LCD_String_xyEccPc>:
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	8c 01       	movw	r16, r24
     b5e:	e9 01       	movw	r28, r18
     b60:	61 11       	cpse	r22, r1
     b62:	08 c0       	rjmp	.+16     	; 0xb74 <_ZN11LCD_Display13LCD_String_xyEccPc+0x20>
     b64:	40 31       	cpi	r20, 0x10	; 16
     b66:	30 f4       	brcc	.+12     	; 0xb74 <_ZN11LCD_Display13LCD_String_xyEccPc+0x20>
     b68:	4f 70       	andi	r20, 0x0F	; 15
     b6a:	64 2f       	mov	r22, r20
     b6c:	60 68       	ori	r22, 0x80	; 128
     b6e:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     b72:	0a c0       	rjmp	.+20     	; 0xb88 <_ZN11LCD_Display13LCD_String_xyEccPc+0x34>
     b74:	61 30       	cpi	r22, 0x01	; 1
     b76:	41 f4       	brne	.+16     	; 0xb88 <_ZN11LCD_Display13LCD_String_xyEccPc+0x34>
     b78:	40 31       	cpi	r20, 0x10	; 16
     b7a:	30 f4       	brcc	.+12     	; 0xb88 <_ZN11LCD_Display13LCD_String_xyEccPc+0x34>
     b7c:	4f 70       	andi	r20, 0x0F	; 15
     b7e:	64 2f       	mov	r22, r20
     b80:	60 6c       	ori	r22, 0xC0	; 192
     b82:	c8 01       	movw	r24, r16
     b84:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
     b88:	be 01       	movw	r22, r28
     b8a:	c8 01       	movw	r24, r16
     b8c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	08 95       	ret

00000b9a <_Z7displayv>:
		dwnbtn();
		backbtn();
	}
}

void display(){
     b9a:	cf 93       	push	r28
     b9c:	df 93       	push	r29

	if (set == 1){
     b9e:	80 91 4a 08 	lds	r24, 0x084A	; 0x80084a <set>
     ba2:	90 91 4b 08 	lds	r25, 0x084B	; 0x80084b <set+0x1>
     ba6:	81 30       	cpi	r24, 0x01	; 1
     ba8:	91 05       	cpc	r25, r1
     baa:	b9 f5       	brne	.+110    	; 0xc1a <_Z7displayv+0x80>
		lcd.LCD_Clear();
     bac:	8a e5       	ldi	r24, 0x5A	; 90
     bae:	98 e0       	ldi	r25, 0x08	; 8
     bb0:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
		lcd.LCD_String(Menu[currentscreenset1][0]);        //Write string on 1st line of LCD
     bb4:	60 91 48 08 	lds	r22, 0x0848	; 0x800848 <currentscreenset1>
     bb8:	70 91 49 08 	lds	r23, 0x0849	; 0x800849 <currentscreenset1+0x1>
     bbc:	66 0f       	add	r22, r22
     bbe:	77 1f       	adc	r23, r23
     bc0:	62 95       	swap	r22
     bc2:	72 95       	swap	r23
     bc4:	70 7f       	andi	r23, 0xF0	; 240
     bc6:	76 27       	eor	r23, r22
     bc8:	60 7f       	andi	r22, 0xF0	; 240
     bca:	76 27       	eor	r23, r22
     bcc:	60 51       	subi	r22, 0x10	; 16
     bce:	7d 4f       	sbci	r23, 0xFD	; 253
     bd0:	8a e5       	ldi	r24, 0x5A	; 90
     bd2:	98 e0       	ldi	r25, 0x08	; 8
     bd4:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
		lcd.LCD_Commandgiver(0xC0);                        //Go to 2nd line
     bd8:	60 ec       	ldi	r22, 0xC0	; 192
     bda:	8a e5       	ldi	r24, 0x5A	; 90
     bdc:	98 e0       	ldi	r25, 0x08	; 8
     bde:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
		lcd.LCD_String(Menu[currentscreenset1][1]);
     be2:	60 91 48 08 	lds	r22, 0x0848	; 0x800848 <currentscreenset1>
     be6:	70 91 49 08 	lds	r23, 0x0849	; 0x800849 <currentscreenset1+0x1>
     bea:	66 0f       	add	r22, r22
     bec:	77 1f       	adc	r23, r23
     bee:	62 95       	swap	r22
     bf0:	72 95       	swap	r23
     bf2:	70 7f       	andi	r23, 0xF0	; 240
     bf4:	76 27       	eor	r23, r22
     bf6:	60 7f       	andi	r22, 0xF0	; 240
     bf8:	76 27       	eor	r23, r22
     bfa:	60 50       	subi	r22, 0x00	; 0
     bfc:	7d 4f       	sbci	r23, 0xFD	; 253
     bfe:	8a e5       	ldi	r24, 0x5A	; 90
     c00:	98 e0       	ldi	r25, 0x08	; 8
     c02:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
     c06:	2f ef       	ldi	r18, 0xFF	; 255
     c08:	89 e6       	ldi	r24, 0x69	; 105
     c0a:	98 e1       	ldi	r25, 0x18	; 24
     c0c:	21 50       	subi	r18, 0x01	; 1
     c0e:	80 40       	sbci	r24, 0x00	; 0
     c10:	90 40       	sbci	r25, 0x00	; 0
     c12:	e1 f7       	brne	.-8      	; 0xc0c <_Z7displayv+0x72>
     c14:	00 c0       	rjmp	.+0      	; 0xc16 <_Z7displayv+0x7c>
     c16:	00 00       	nop
     c18:	67 c1       	rjmp	.+718    	; 0xee8 <_Z7displayv+0x34e>
		_delay_ms(1000);
	}
	else if ((set == 2) & (currentscreenset1 == 0)){
     c1a:	21 e0       	ldi	r18, 0x01	; 1
     c1c:	02 97       	sbiw	r24, 0x02	; 2
     c1e:	09 f0       	breq	.+2      	; 0xc22 <_Z7displayv+0x88>
     c20:	20 e0       	ldi	r18, 0x00	; 0
     c22:	80 91 48 08 	lds	r24, 0x0848	; 0x800848 <currentscreenset1>
     c26:	90 91 49 08 	lds	r25, 0x0849	; 0x800849 <currentscreenset1+0x1>
     c2a:	31 e0       	ldi	r19, 0x01	; 1
     c2c:	00 97       	sbiw	r24, 0x00	; 0
     c2e:	09 f0       	breq	.+2      	; 0xc32 <_Z7displayv+0x98>
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	33 23       	and	r19, r19
     c34:	09 f4       	brne	.+2      	; 0xc38 <_Z7displayv+0x9e>
     c36:	6f c0       	rjmp	.+222    	; 0xd16 <_Z7displayv+0x17c>
     c38:	22 23       	and	r18, r18
     c3a:	09 f4       	brne	.+2      	; 0xc3e <_Z7displayv+0xa4>
     c3c:	6c c0       	rjmp	.+216    	; 0xd16 <_Z7displayv+0x17c>
		char* txtHr;
		char* txtMin;
		lcd.LCD_Clear();
     c3e:	8a e5       	ldi	r24, 0x5A	; 90
     c40:	98 e0       	ldi	r25, 0x08	; 8
     c42:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
		int* alarmTime = alarmclock.setNewAlarm();
     c46:	88 e5       	ldi	r24, 0x58	; 88
     c48:	98 e0       	ldi	r25, 0x08	; 8
     c4a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <_ZN10AlarmClock11setNewAlarmEv>
     c4e:	ec 01       	movw	r28, r24
		allAlarms[alarmCount][0] = alarmTime[0];
     c50:	e0 91 1a 08 	lds	r30, 0x081A	; 0x80081a <alarmCount>
     c54:	f0 91 1b 08 	lds	r31, 0x081B	; 0x80081b <alarmCount+0x1>
     c58:	88 81       	ld	r24, Y
     c5a:	99 81       	ldd	r25, Y+1	; 0x01
     c5c:	ee 0f       	add	r30, r30
     c5e:	ff 1f       	adc	r31, r31
     c60:	ee 0f       	add	r30, r30
     c62:	ff 1f       	adc	r31, r31
     c64:	e4 5e       	subi	r30, 0xE4	; 228
     c66:	f7 4f       	sbci	r31, 0xF7	; 247
     c68:	91 83       	std	Z+1, r25	; 0x01
     c6a:	80 83       	st	Z, r24
		allAlarms[alarmCount][1] = alarmTime[1];
     c6c:	8a 81       	ldd	r24, Y+2	; 0x02
     c6e:	9b 81       	ldd	r25, Y+3	; 0x03
     c70:	93 83       	std	Z+3, r25	; 0x03
     c72:	82 83       	std	Z+2, r24	; 0x02

		txtHr = alarmclock.int_to_char(alarmTime[0]);
     c74:	68 81       	ld	r22, Y
     c76:	79 81       	ldd	r23, Y+1	; 0x01
     c78:	88 e5       	ldi	r24, 0x58	; 88
     c7a:	98 e0       	ldi	r25, 0x08	; 8
     c7c:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10AlarmClock11int_to_charEi>
     c80:	dc 01       	movw	r26, r24
		allAlarmsMenu[alarmCount][0][7] = txtHr[0]; //optional
     c82:	e0 91 1a 08 	lds	r30, 0x081A	; 0x80081a <alarmCount>
     c86:	f0 91 1b 08 	lds	r31, 0x081B	; 0x80081b <alarmCount+0x1>
     c8a:	2c 91       	ld	r18, X
     c8c:	af 01       	movw	r20, r30
     c8e:	44 0f       	add	r20, r20
     c90:	55 1f       	adc	r21, r21
     c92:	42 95       	swap	r20
     c94:	52 95       	swap	r21
     c96:	50 7f       	andi	r21, 0xF0	; 240
     c98:	54 27       	eor	r21, r20
     c9a:	40 7f       	andi	r20, 0xF0	; 240
     c9c:	54 27       	eor	r21, r20
     c9e:	ca 01       	movw	r24, r20
     ca0:	80 5b       	subi	r24, 0xB0	; 176
     ca2:	9d 4f       	sbci	r25, 0xFD	; 253
     ca4:	fc 01       	movw	r30, r24
     ca6:	27 83       	std	Z+7, r18	; 0x07
		allAlarmsMenu[alarmCount][0][8] = txtHr[1]; //
     ca8:	11 96       	adiw	r26, 0x01	; 1
     caa:	2c 91       	ld	r18, X
     cac:	11 97       	sbiw	r26, 0x01	; 1
     cae:	20 87       	std	Z+8, r18	; 0x08

		alarmChangeList[alarmCount][0][0] = txtHr[0]; 
     cb0:	8c 91       	ld	r24, X
     cb2:	fa 01       	movw	r30, r20
     cb4:	e0 55       	subi	r30, 0x50	; 80
     cb6:	fe 4f       	sbci	r31, 0xFE	; 254
     cb8:	80 83       	st	Z, r24
		alarmChangeList[alarmCount][0][1] = txtHr[1];
     cba:	11 96       	adiw	r26, 0x01	; 1
     cbc:	8c 91       	ld	r24, X
     cbe:	81 83       	std	Z+1, r24	; 0x01

		txtMin = alarmclock.int_to_char(alarmTime[1]);
     cc0:	6a 81       	ldd	r22, Y+2	; 0x02
     cc2:	7b 81       	ldd	r23, Y+3	; 0x03
     cc4:	88 e5       	ldi	r24, 0x58	; 88
     cc6:	98 e0       	ldi	r25, 0x08	; 8
     cc8:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10AlarmClock11int_to_charEi>
     ccc:	dc 01       	movw	r26, r24
		allAlarmsMenu[alarmCount][0][10] = txtMin[0]; // optional
     cce:	20 91 1a 08 	lds	r18, 0x081A	; 0x80081a <alarmCount>
     cd2:	30 91 1b 08 	lds	r19, 0x081B	; 0x80081b <alarmCount+0x1>
     cd6:	8c 91       	ld	r24, X
     cd8:	f9 01       	movw	r30, r18
     cda:	ee 0f       	add	r30, r30
     cdc:	ff 1f       	adc	r31, r31
     cde:	e2 95       	swap	r30
     ce0:	f2 95       	swap	r31
     ce2:	f0 7f       	andi	r31, 0xF0	; 240
     ce4:	fe 27       	eor	r31, r30
     ce6:	e0 7f       	andi	r30, 0xF0	; 240
     ce8:	fe 27       	eor	r31, r30
     cea:	ef 01       	movw	r28, r30
     cec:	c0 5b       	subi	r28, 0xB0	; 176
     cee:	dd 4f       	sbci	r29, 0xFD	; 253
     cf0:	8a 87       	std	Y+10, r24	; 0x0a
		allAlarmsMenu[alarmCount][0][11] = txtMin[1]; //
     cf2:	11 96       	adiw	r26, 0x01	; 1
     cf4:	8c 91       	ld	r24, X
     cf6:	11 97       	sbiw	r26, 0x01	; 1
     cf8:	8b 87       	std	Y+11, r24	; 0x0b

		alarmChangeList[alarmCount][0][3] = txtMin[0];
     cfa:	8c 91       	ld	r24, X
     cfc:	e0 55       	subi	r30, 0x50	; 80
     cfe:	fe 4f       	sbci	r31, 0xFE	; 254
     d00:	83 83       	std	Z+3, r24	; 0x03
		alarmChangeList[alarmCount][0][4] = txtMin[1];
     d02:	11 96       	adiw	r26, 0x01	; 1
     d04:	8c 91       	ld	r24, X
     d06:	84 83       	std	Z+4, r24	; 0x04

		alarmCount += 1;
     d08:	2f 5f       	subi	r18, 0xFF	; 255
     d0a:	3f 4f       	sbci	r19, 0xFF	; 255
     d0c:	30 93 1b 08 	sts	0x081B, r19	; 0x80081b <alarmCount+0x1>
     d10:	20 93 1a 08 	sts	0x081A, r18	; 0x80081a <alarmCount>
     d14:	e9 c0       	rjmp	.+466    	; 0xee8 <_Z7displayv+0x34e>
	}
	else if ((set == 2) & (currentscreenset1 == 1)){
     d16:	31 e0       	ldi	r19, 0x01	; 1
     d18:	81 30       	cpi	r24, 0x01	; 1
     d1a:	91 05       	cpc	r25, r1
     d1c:	09 f0       	breq	.+2      	; 0xd20 <_Z7displayv+0x186>
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	33 23       	and	r19, r19
     d22:	c9 f1       	breq	.+114    	; 0xd96 <_Z7displayv+0x1fc>
     d24:	22 23       	and	r18, r18
     d26:	b9 f1       	breq	.+110    	; 0xd96 <_Z7displayv+0x1fc>
		//All alarms menu
		lcd.LCD_Clear();
     d28:	8a e5       	ldi	r24, 0x5A	; 90
     d2a:	98 e0       	ldi	r25, 0x08	; 8
     d2c:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
		lcd.LCD_String(allAlarmsMenu[currentscreenset21][0]);  
     d30:	60 91 46 08 	lds	r22, 0x0846	; 0x800846 <currentscreenset21>
     d34:	70 91 47 08 	lds	r23, 0x0847	; 0x800847 <currentscreenset21+0x1>
     d38:	66 0f       	add	r22, r22
     d3a:	77 1f       	adc	r23, r23
     d3c:	62 95       	swap	r22
     d3e:	72 95       	swap	r23
     d40:	70 7f       	andi	r23, 0xF0	; 240
     d42:	76 27       	eor	r23, r22
     d44:	60 7f       	andi	r22, 0xF0	; 240
     d46:	76 27       	eor	r23, r22
     d48:	60 5b       	subi	r22, 0xB0	; 176
     d4a:	7d 4f       	sbci	r23, 0xFD	; 253
     d4c:	8a e5       	ldi	r24, 0x5A	; 90
     d4e:	98 e0       	ldi	r25, 0x08	; 8
     d50:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
		lcd.LCD_Commandgiver(0xC0);                        
     d54:	60 ec       	ldi	r22, 0xC0	; 192
     d56:	8a e5       	ldi	r24, 0x5A	; 90
     d58:	98 e0       	ldi	r25, 0x08	; 8
     d5a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
		lcd.LCD_String(allAlarmsMenu[currentscreenset21][1]);
     d5e:	60 91 46 08 	lds	r22, 0x0846	; 0x800846 <currentscreenset21>
     d62:	70 91 47 08 	lds	r23, 0x0847	; 0x800847 <currentscreenset21+0x1>
     d66:	66 0f       	add	r22, r22
     d68:	77 1f       	adc	r23, r23
     d6a:	62 95       	swap	r22
     d6c:	72 95       	swap	r23
     d6e:	70 7f       	andi	r23, 0xF0	; 240
     d70:	76 27       	eor	r23, r22
     d72:	60 7f       	andi	r22, 0xF0	; 240
     d74:	76 27       	eor	r23, r22
     d76:	60 5a       	subi	r22, 0xA0	; 160
     d78:	7d 4f       	sbci	r23, 0xFD	; 253
     d7a:	8a e5       	ldi	r24, 0x5A	; 90
     d7c:	98 e0       	ldi	r25, 0x08	; 8
     d7e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
     d82:	ff ef       	ldi	r31, 0xFF	; 255
     d84:	29 e6       	ldi	r18, 0x69	; 105
     d86:	88 e1       	ldi	r24, 0x18	; 24
     d88:	f1 50       	subi	r31, 0x01	; 1
     d8a:	20 40       	sbci	r18, 0x00	; 0
     d8c:	80 40       	sbci	r24, 0x00	; 0
     d8e:	e1 f7       	brne	.-8      	; 0xd88 <_Z7displayv+0x1ee>
     d90:	00 c0       	rjmp	.+0      	; 0xd92 <_Z7displayv+0x1f8>
     d92:	00 00       	nop
     d94:	a9 c0       	rjmp	.+338    	; 0xee8 <_Z7displayv+0x34e>
		//   |     16:30       |
		//   | OK        DELETE|
		
		_delay_ms(1000);
	}
	else if ((set == 2) & (currentscreenset1 == 2)){
     d96:	31 e0       	ldi	r19, 0x01	; 1
     d98:	82 30       	cpi	r24, 0x02	; 2
     d9a:	91 05       	cpc	r25, r1
     d9c:	09 f0       	breq	.+2      	; 0xda0 <_Z7displayv+0x206>
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	33 23       	and	r19, r19
     da2:	39 f0       	breq	.+14     	; 0xdb2 <_Z7displayv+0x218>
     da4:	22 23       	and	r18, r18
     da6:	29 f0       	breq	.+10     	; 0xdb2 <_Z7displayv+0x218>
		alarmclock.setTimetoRTC();
     da8:	88 e5       	ldi	r24, 0x58	; 88
     daa:	98 e0       	ldi	r25, 0x08	; 8
     dac:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_ZN10AlarmClock12setTimetoRTCEv>
     db0:	9b c0       	rjmp	.+310    	; 0xee8 <_Z7displayv+0x34e>
	}
	else if ((set == 2) & (currentscreenset1 == 3)){
     db2:	31 e0       	ldi	r19, 0x01	; 1
     db4:	83 30       	cpi	r24, 0x03	; 3
     db6:	91 05       	cpc	r25, r1
     db8:	09 f0       	breq	.+2      	; 0xdbc <_Z7displayv+0x222>
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	33 23       	and	r19, r19
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <_Z7displayv+0x228>
     dc0:	6d c0       	rjmp	.+218    	; 0xe9c <_Z7displayv+0x302>
     dc2:	22 23       	and	r18, r18
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <_Z7displayv+0x22e>
     dc6:	6a c0       	rjmp	.+212    	; 0xe9c <_Z7displayv+0x302>
		lcd.LCD_Clear();
     dc8:	8a e5       	ldi	r24, 0x5A	; 90
     dca:	98 e0       	ldi	r25, 0x08	; 8
     dcc:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
		lcd.LCD_String(alarmtone[currentscreenset23][0]);                //Write string on 1st line of LCD
     dd0:	60 91 44 08 	lds	r22, 0x0844	; 0x800844 <currentscreenset23>
     dd4:	70 91 45 08 	lds	r23, 0x0845	; 0x800845 <currentscreenset23+0x1>
     dd8:	66 0f       	add	r22, r22
     dda:	77 1f       	adc	r23, r23
     ddc:	62 95       	swap	r22
     dde:	72 95       	swap	r23
     de0:	70 7f       	andi	r23, 0xF0	; 240
     de2:	76 27       	eor	r23, r22
     de4:	60 7f       	andi	r22, 0xF0	; 240
     de6:	76 27       	eor	r23, r22
     de8:	60 5f       	subi	r22, 0xF0	; 240
     dea:	7e 4f       	sbci	r23, 0xFE	; 254
     dec:	8a e5       	ldi	r24, 0x5A	; 90
     dee:	98 e0       	ldi	r25, 0x08	; 8
     df0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
		lcd.LCD_Commandgiver(0xC0);                        //Go to 2nd line
     df4:	60 ec       	ldi	r22, 0xC0	; 192
     df6:	8a e5       	ldi	r24, 0x5A	; 90
     df8:	98 e0       	ldi	r25, 0x08	; 8
     dfa:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
		lcd.LCD_String(alarmtone[currentscreenset23][1]);
     dfe:	60 91 44 08 	lds	r22, 0x0844	; 0x800844 <currentscreenset23>
     e02:	70 91 45 08 	lds	r23, 0x0845	; 0x800845 <currentscreenset23+0x1>
     e06:	66 0f       	add	r22, r22
     e08:	77 1f       	adc	r23, r23
     e0a:	62 95       	swap	r22
     e0c:	72 95       	swap	r23
     e0e:	70 7f       	andi	r23, 0xF0	; 240
     e10:	76 27       	eor	r23, r22
     e12:	60 7f       	andi	r22, 0xF0	; 240
     e14:	76 27       	eor	r23, r22
     e16:	60 5e       	subi	r22, 0xE0	; 224
     e18:	7e 4f       	sbci	r23, 0xFE	; 254
     e1a:	8a e5       	ldi	r24, 0x5A	; 90
     e1c:	98 e0       	ldi	r25, 0x08	; 8
     e1e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
     e22:	9f ef       	ldi	r25, 0xFF	; 255
     e24:	e9 e6       	ldi	r30, 0x69	; 105
     e26:	f8 e1       	ldi	r31, 0x18	; 24
     e28:	91 50       	subi	r25, 0x01	; 1
     e2a:	e0 40       	sbci	r30, 0x00	; 0
     e2c:	f0 40       	sbci	r31, 0x00	; 0
     e2e:	e1 f7       	brne	.-8      	; 0xe28 <_Z7displayv+0x28e>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <_Z7displayv+0x298>
     e32:	00 00       	nop
		_delay_ms(1000);
		if (currentscreenset23==0){
     e34:	80 91 44 08 	lds	r24, 0x0844	; 0x800844 <currentscreenset23>
     e38:	90 91 45 08 	lds	r25, 0x0845	; 0x800845 <currentscreenset23+0x1>
     e3c:	00 97       	sbiw	r24, 0x00	; 0
     e3e:	39 f4       	brne	.+14     	; 0xe4e <_Z7displayv+0x2b4>
			music.tone(0);
     e40:	60 e0       	ldi	r22, 0x00	; 0
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	8c e4       	ldi	r24, 0x4C	; 76
     e46:	98 e0       	ldi	r25, 0x08	; 8
     e48:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN15music_notations4toneEi>
     e4c:	4d c0       	rjmp	.+154    	; 0xee8 <_Z7displayv+0x34e>
		}
		else if (currentscreenset23==1){
     e4e:	81 30       	cpi	r24, 0x01	; 1
     e50:	91 05       	cpc	r25, r1
     e52:	39 f4       	brne	.+14     	; 0xe62 <_Z7displayv+0x2c8>
			music.tone(1);
     e54:	61 e0       	ldi	r22, 0x01	; 1
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	8c e4       	ldi	r24, 0x4C	; 76
     e5a:	98 e0       	ldi	r25, 0x08	; 8
     e5c:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN15music_notations4toneEi>
     e60:	43 c0       	rjmp	.+134    	; 0xee8 <_Z7displayv+0x34e>
		}
		else if (currentscreenset23==2){
     e62:	82 30       	cpi	r24, 0x02	; 2
     e64:	91 05       	cpc	r25, r1
     e66:	39 f4       	brne	.+14     	; 0xe76 <_Z7displayv+0x2dc>
			music.tone(2);
     e68:	62 e0       	ldi	r22, 0x02	; 2
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	8c e4       	ldi	r24, 0x4C	; 76
     e6e:	98 e0       	ldi	r25, 0x08	; 8
     e70:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN15music_notations4toneEi>
     e74:	39 c0       	rjmp	.+114    	; 0xee8 <_Z7displayv+0x34e>
		}
		else if (currentscreenset23==3){
     e76:	83 30       	cpi	r24, 0x03	; 3
     e78:	91 05       	cpc	r25, r1
     e7a:	39 f4       	brne	.+14     	; 0xe8a <_Z7displayv+0x2f0>
			music.tone(3);
     e7c:	63 e0       	ldi	r22, 0x03	; 3
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	8c e4       	ldi	r24, 0x4C	; 76
     e82:	98 e0       	ldi	r25, 0x08	; 8
     e84:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN15music_notations4toneEi>
     e88:	2f c0       	rjmp	.+94     	; 0xee8 <_Z7displayv+0x34e>
		}
		else if (currentscreenset23==4){
     e8a:	04 97       	sbiw	r24, 0x04	; 4
     e8c:	69 f5       	brne	.+90     	; 0xee8 <_Z7displayv+0x34e>
			music.tone(4);
     e8e:	64 e0       	ldi	r22, 0x04	; 4
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	8c e4       	ldi	r24, 0x4C	; 76
     e94:	98 e0       	ldi	r25, 0x08	; 8
     e96:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN15music_notations4toneEi>
     e9a:	26 c0       	rjmp	.+76     	; 0xee8 <_Z7displayv+0x34e>
		}
	}
	else if ((set == 2) & (currentscreenset1 == 4)){
     e9c:	31 e0       	ldi	r19, 0x01	; 1
     e9e:	04 97       	sbiw	r24, 0x04	; 4
     ea0:	09 f0       	breq	.+2      	; 0xea4 <_Z7displayv+0x30a>
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	33 23       	and	r19, r19
     ea6:	01 f1       	breq	.+64     	; 0xee8 <_Z7displayv+0x34e>
     ea8:	22 23       	and	r18, r18
     eaa:	f1 f0       	breq	.+60     	; 0xee8 <_Z7displayv+0x34e>
		lcd.LCD_Clear();
     eac:	8a e5       	ldi	r24, 0x5A	; 90
     eae:	98 e0       	ldi	r25, 0x08	; 8
     eb0:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN11LCD_Display9LCD_ClearEv>
		lcd.LCD_String(reset[0]);                //Write string on 1st line of LCD
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	71 e0       	ldi	r23, 0x01	; 1
     eb8:	8a e5       	ldi	r24, 0x5A	; 90
     eba:	98 e0       	ldi	r25, 0x08	; 8
     ebc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
		lcd.LCD_Commandgiver(0xC0);              //Go to 2nd line
     ec0:	60 ec       	ldi	r22, 0xC0	; 192
     ec2:	8a e5       	ldi	r24, 0x5A	; 90
     ec4:	98 e0       	ldi	r25, 0x08	; 8
     ec6:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_ZN11LCD_Display16LCD_CommandgiverEh>
		lcd.LCD_String(reset[0]);
     eca:	60 e0       	ldi	r22, 0x00	; 0
     ecc:	71 e0       	ldi	r23, 0x01	; 1
     ece:	8a e5       	ldi	r24, 0x5A	; 90
     ed0:	98 e0       	ldi	r25, 0x08	; 8
     ed2:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN11LCD_Display10LCD_StringEPc>
     ed6:	2f ef       	ldi	r18, 0xFF	; 255
     ed8:	89 e6       	ldi	r24, 0x69	; 105
     eda:	98 e1       	ldi	r25, 0x18	; 24
     edc:	21 50       	subi	r18, 0x01	; 1
     ede:	80 40       	sbci	r24, 0x00	; 0
     ee0:	90 40       	sbci	r25, 0x00	; 0
     ee2:	e1 f7       	brne	.-8      	; 0xedc <_Z7displayv+0x342>
     ee4:	00 c0       	rjmp	.+0      	; 0xee6 <_Z7displayv+0x34c>
     ee6:	00 00       	nop
		_delay_ms(1000);
	}
}
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	08 95       	ret

00000eee <_Z5upbtnv>:

void upbtn(){
	if (PINC &(1<<Up)){
     eee:	30 9b       	sbis	0x06, 0	; 6
     ef0:	8a c0       	rjmp	.+276    	; 0x1006 <_Z5upbtnv+0x118>
		if ((set == 1) & (currentscreenset1==0)){
     ef2:	40 91 4a 08 	lds	r20, 0x084A	; 0x80084a <set>
     ef6:	50 91 4b 08 	lds	r21, 0x084B	; 0x80084b <set+0x1>
     efa:	21 e0       	ldi	r18, 0x01	; 1
     efc:	41 30       	cpi	r20, 0x01	; 1
     efe:	51 05       	cpc	r21, r1
     f00:	09 f0       	breq	.+2      	; 0xf04 <_Z5upbtnv+0x16>
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	80 91 48 08 	lds	r24, 0x0848	; 0x800848 <currentscreenset1>
     f08:	90 91 49 08 	lds	r25, 0x0849	; 0x800849 <currentscreenset1+0x1>
     f0c:	31 e0       	ldi	r19, 0x01	; 1
     f0e:	00 97       	sbiw	r24, 0x00	; 0
     f10:	09 f0       	breq	.+2      	; 0xf14 <_Z5upbtnv+0x26>
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	33 23       	and	r19, r19
     f16:	59 f0       	breq	.+22     	; 0xf2e <_Z5upbtnv+0x40>
     f18:	22 23       	and	r18, r18
     f1a:	49 f0       	breq	.+18     	; 0xf2e <_Z5upbtnv+0x40>
			currentscreenset1=numofscreens1-1;
     f1c:	84 e0       	ldi	r24, 0x04	; 4
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	90 93 49 08 	sts	0x0849, r25	; 0x800849 <currentscreenset1+0x1>
     f24:	80 93 48 08 	sts	0x0848, r24	; 0x800848 <currentscreenset1>
			display();
     f28:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
     f2c:	08 95       	ret
		}
		else if ((set == 1) & (currentscreenset1 != 0)){
     f2e:	31 e0       	ldi	r19, 0x01	; 1
     f30:	00 97       	sbiw	r24, 0x00	; 0
     f32:	09 f4       	brne	.+2      	; 0xf36 <_Z5upbtnv+0x48>
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	33 23       	and	r19, r19
     f38:	51 f0       	breq	.+20     	; 0xf4e <_Z5upbtnv+0x60>
     f3a:	22 23       	and	r18, r18
     f3c:	41 f0       	breq	.+16     	; 0xf4e <_Z5upbtnv+0x60>
			currentscreenset1 -= 1;
     f3e:	01 97       	sbiw	r24, 0x01	; 1
     f40:	90 93 49 08 	sts	0x0849, r25	; 0x800849 <currentscreenset1+0x1>
     f44:	80 93 48 08 	sts	0x0848, r24	; 0x800848 <currentscreenset1>
			display();
     f48:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
     f4c:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==1) & (currentscreenset21 == 0)){
     f4e:	31 e0       	ldi	r19, 0x01	; 1
     f50:	42 30       	cpi	r20, 0x02	; 2
     f52:	51 05       	cpc	r21, r1
     f54:	09 f0       	breq	.+2      	; 0xf58 <_Z5upbtnv+0x6a>
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	21 e0       	ldi	r18, 0x01	; 1
     f5a:	81 30       	cpi	r24, 0x01	; 1
     f5c:	91 05       	cpc	r25, r1
     f5e:	09 f0       	breq	.+2      	; 0xf62 <_Z5upbtnv+0x74>
     f60:	20 e0       	ldi	r18, 0x00	; 0
     f62:	23 23       	and	r18, r19
     f64:	40 91 46 08 	lds	r20, 0x0846	; 0x800846 <currentscreenset21>
     f68:	50 91 47 08 	lds	r21, 0x0847	; 0x800847 <currentscreenset21+0x1>
     f6c:	61 e0       	ldi	r22, 0x01	; 1
     f6e:	41 15       	cp	r20, r1
     f70:	51 05       	cpc	r21, r1
     f72:	09 f0       	breq	.+2      	; 0xf76 <_Z5upbtnv+0x88>
     f74:	60 e0       	ldi	r22, 0x00	; 0
     f76:	22 23       	and	r18, r18
     f78:	59 f0       	breq	.+22     	; 0xf90 <_Z5upbtnv+0xa2>
     f7a:	66 23       	and	r22, r22
     f7c:	49 f0       	breq	.+18     	; 0xf90 <_Z5upbtnv+0xa2>
			currentscreenset21=numofscreens21-1;
     f7e:	84 e0       	ldi	r24, 0x04	; 4
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	90 93 47 08 	sts	0x0847, r25	; 0x800847 <currentscreenset21+0x1>
     f86:	80 93 46 08 	sts	0x0846, r24	; 0x800846 <currentscreenset21>
			display();
     f8a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
     f8e:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==1) & (currentscreenset21 != 0)){
     f90:	61 e0       	ldi	r22, 0x01	; 1
     f92:	41 15       	cp	r20, r1
     f94:	51 05       	cpc	r21, r1
     f96:	09 f4       	brne	.+2      	; 0xf9a <_Z5upbtnv+0xac>
     f98:	60 e0       	ldi	r22, 0x00	; 0
     f9a:	22 23       	and	r18, r18
     f9c:	59 f0       	breq	.+22     	; 0xfb4 <_Z5upbtnv+0xc6>
     f9e:	66 23       	and	r22, r22
     fa0:	49 f0       	breq	.+18     	; 0xfb4 <_Z5upbtnv+0xc6>
			currentscreenset21 -= 1;
     fa2:	41 50       	subi	r20, 0x01	; 1
     fa4:	51 09       	sbc	r21, r1
     fa6:	50 93 47 08 	sts	0x0847, r21	; 0x800847 <currentscreenset21+0x1>
     faa:	40 93 46 08 	sts	0x0846, r20	; 0x800846 <currentscreenset21>
			display();
     fae:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
     fb2:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==3) & (currentscreenset23 == 0)){
     fb4:	21 e0       	ldi	r18, 0x01	; 1
     fb6:	03 97       	sbiw	r24, 0x03	; 3
     fb8:	09 f0       	breq	.+2      	; 0xfbc <_Z5upbtnv+0xce>
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	32 23       	and	r19, r18
     fbe:	80 91 44 08 	lds	r24, 0x0844	; 0x800844 <currentscreenset23>
     fc2:	90 91 45 08 	lds	r25, 0x0845	; 0x800845 <currentscreenset23+0x1>
     fc6:	21 e0       	ldi	r18, 0x01	; 1
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	09 f0       	breq	.+2      	; 0xfce <_Z5upbtnv+0xe0>
     fcc:	20 e0       	ldi	r18, 0x00	; 0
     fce:	33 23       	and	r19, r19
     fd0:	59 f0       	breq	.+22     	; 0xfe8 <_Z5upbtnv+0xfa>
     fd2:	22 23       	and	r18, r18
     fd4:	49 f0       	breq	.+18     	; 0xfe8 <_Z5upbtnv+0xfa>
			currentscreenset23=numofscreens21-1;
     fd6:	84 e0       	ldi	r24, 0x04	; 4
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	90 93 45 08 	sts	0x0845, r25	; 0x800845 <currentscreenset23+0x1>
     fde:	80 93 44 08 	sts	0x0844, r24	; 0x800844 <currentscreenset23>
			display();
     fe2:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
     fe6:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==3) & (currentscreenset23 != 0)){
     fe8:	21 e0       	ldi	r18, 0x01	; 1
     fea:	00 97       	sbiw	r24, 0x00	; 0
     fec:	09 f4       	brne	.+2      	; 0xff0 <_Z5upbtnv+0x102>
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	33 23       	and	r19, r19
     ff2:	49 f0       	breq	.+18     	; 0x1006 <_Z5upbtnv+0x118>
     ff4:	22 23       	and	r18, r18
     ff6:	39 f0       	breq	.+14     	; 0x1006 <_Z5upbtnv+0x118>
			currentscreenset23 -= 1;
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	90 93 45 08 	sts	0x0845, r25	; 0x800845 <currentscreenset23+0x1>
     ffe:	80 93 44 08 	sts	0x0844, r24	; 0x800844 <currentscreenset23>
			display();
    1002:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1006:	08 95       	ret

00001008 <_Z6dwnbtnv>:
		}
	}
}

void dwnbtn(){
	if (PINC &(1<<Down)){
    1008:	31 9b       	sbis	0x06, 1	; 6
    100a:	8e c0       	rjmp	.+284    	; 0x1128 <_Z6dwnbtnv+0x120>
		if ((set == 1) & (currentscreenset1==4)){
    100c:	40 91 4a 08 	lds	r20, 0x084A	; 0x80084a <set>
    1010:	50 91 4b 08 	lds	r21, 0x084B	; 0x80084b <set+0x1>
    1014:	21 e0       	ldi	r18, 0x01	; 1
    1016:	41 30       	cpi	r20, 0x01	; 1
    1018:	51 05       	cpc	r21, r1
    101a:	09 f0       	breq	.+2      	; 0x101e <_Z6dwnbtnv+0x16>
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	80 91 48 08 	lds	r24, 0x0848	; 0x800848 <currentscreenset1>
    1022:	90 91 49 08 	lds	r25, 0x0849	; 0x800849 <currentscreenset1+0x1>
    1026:	31 e0       	ldi	r19, 0x01	; 1
    1028:	84 30       	cpi	r24, 0x04	; 4
    102a:	91 05       	cpc	r25, r1
    102c:	09 f0       	breq	.+2      	; 0x1030 <_Z6dwnbtnv+0x28>
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	33 23       	and	r19, r19
    1032:	49 f0       	breq	.+18     	; 0x1046 <_Z6dwnbtnv+0x3e>
    1034:	22 23       	and	r18, r18
    1036:	39 f0       	breq	.+14     	; 0x1046 <_Z6dwnbtnv+0x3e>
			currentscreenset1=0;
    1038:	10 92 49 08 	sts	0x0849, r1	; 0x800849 <currentscreenset1+0x1>
    103c:	10 92 48 08 	sts	0x0848, r1	; 0x800848 <currentscreenset1>
			display();
    1040:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1044:	08 95       	ret
		}
		else if ((set == 1) & (currentscreenset1 != 4)){
    1046:	31 e0       	ldi	r19, 0x01	; 1
    1048:	84 30       	cpi	r24, 0x04	; 4
    104a:	91 05       	cpc	r25, r1
    104c:	09 f4       	brne	.+2      	; 0x1050 <_Z6dwnbtnv+0x48>
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	33 23       	and	r19, r19
    1052:	a1 f0       	breq	.+40     	; 0x107c <_Z6dwnbtnv+0x74>
    1054:	22 23       	and	r18, r18
    1056:	91 f0       	breq	.+36     	; 0x107c <_Z6dwnbtnv+0x74>
    1058:	8f e1       	ldi	r24, 0x1F	; 31
    105a:	9e e4       	ldi	r25, 0x4E	; 78
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <_Z6dwnbtnv+0x54>
    1060:	00 c0       	rjmp	.+0      	; 0x1062 <_Z6dwnbtnv+0x5a>
    1062:	00 00       	nop
			_delay_ms(10);
			currentscreenset1 += 1;
    1064:	80 91 48 08 	lds	r24, 0x0848	; 0x800848 <currentscreenset1>
    1068:	90 91 49 08 	lds	r25, 0x0849	; 0x800849 <currentscreenset1+0x1>
    106c:	01 96       	adiw	r24, 0x01	; 1
    106e:	90 93 49 08 	sts	0x0849, r25	; 0x800849 <currentscreenset1+0x1>
    1072:	80 93 48 08 	sts	0x0848, r24	; 0x800848 <currentscreenset1>
			display();
    1076:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    107a:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==1) & (currentscreenset21 == 4)){
    107c:	31 e0       	ldi	r19, 0x01	; 1
    107e:	42 30       	cpi	r20, 0x02	; 2
    1080:	51 05       	cpc	r21, r1
    1082:	09 f0       	breq	.+2      	; 0x1086 <_Z6dwnbtnv+0x7e>
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	21 e0       	ldi	r18, 0x01	; 1
    1088:	81 30       	cpi	r24, 0x01	; 1
    108a:	91 05       	cpc	r25, r1
    108c:	09 f0       	breq	.+2      	; 0x1090 <_Z6dwnbtnv+0x88>
    108e:	20 e0       	ldi	r18, 0x00	; 0
    1090:	23 23       	and	r18, r19
    1092:	60 91 46 08 	lds	r22, 0x0846	; 0x800846 <currentscreenset21>
    1096:	70 91 47 08 	lds	r23, 0x0847	; 0x800847 <currentscreenset21+0x1>
    109a:	41 e0       	ldi	r20, 0x01	; 1
    109c:	64 30       	cpi	r22, 0x04	; 4
    109e:	71 05       	cpc	r23, r1
    10a0:	09 f0       	breq	.+2      	; 0x10a4 <_Z6dwnbtnv+0x9c>
    10a2:	40 e0       	ldi	r20, 0x00	; 0
    10a4:	22 23       	and	r18, r18
    10a6:	49 f0       	breq	.+18     	; 0x10ba <_Z6dwnbtnv+0xb2>
    10a8:	44 23       	and	r20, r20
    10aa:	39 f0       	breq	.+14     	; 0x10ba <_Z6dwnbtnv+0xb2>
			currentscreenset21=0;
    10ac:	10 92 47 08 	sts	0x0847, r1	; 0x800847 <currentscreenset21+0x1>
    10b0:	10 92 46 08 	sts	0x0846, r1	; 0x800846 <currentscreenset21>
			display();
    10b4:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    10b8:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==1) & (currentscreenset23 != 4)){
    10ba:	40 91 44 08 	lds	r20, 0x0844	; 0x800844 <currentscreenset23>
    10be:	50 91 45 08 	lds	r21, 0x0845	; 0x800845 <currentscreenset23+0x1>
    10c2:	e1 e0       	ldi	r30, 0x01	; 1
    10c4:	44 30       	cpi	r20, 0x04	; 4
    10c6:	51 05       	cpc	r21, r1
    10c8:	09 f4       	brne	.+2      	; 0x10cc <_Z6dwnbtnv+0xc4>
    10ca:	e0 e0       	ldi	r30, 0x00	; 0
    10cc:	22 23       	and	r18, r18
    10ce:	59 f0       	breq	.+22     	; 0x10e6 <_Z6dwnbtnv+0xde>
    10d0:	ee 23       	and	r30, r30
    10d2:	49 f0       	breq	.+18     	; 0x10e6 <_Z6dwnbtnv+0xde>
			currentscreenset21 += 1;
    10d4:	6f 5f       	subi	r22, 0xFF	; 255
    10d6:	7f 4f       	sbci	r23, 0xFF	; 255
    10d8:	70 93 47 08 	sts	0x0847, r23	; 0x800847 <currentscreenset21+0x1>
    10dc:	60 93 46 08 	sts	0x0846, r22	; 0x800846 <currentscreenset21>
			display();
    10e0:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    10e4:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==3) & (currentscreenset23 == 4)){
    10e6:	21 e0       	ldi	r18, 0x01	; 1
    10e8:	03 97       	sbiw	r24, 0x03	; 3
    10ea:	09 f0       	breq	.+2      	; 0x10ee <_Z6dwnbtnv+0xe6>
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	32 23       	and	r19, r18
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	44 30       	cpi	r20, 0x04	; 4
    10f4:	51 05       	cpc	r21, r1
    10f6:	09 f0       	breq	.+2      	; 0x10fa <_Z6dwnbtnv+0xf2>
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	33 23       	and	r19, r19
    10fc:	49 f0       	breq	.+18     	; 0x1110 <_Z6dwnbtnv+0x108>
    10fe:	88 23       	and	r24, r24
    1100:	39 f0       	breq	.+14     	; 0x1110 <_Z6dwnbtnv+0x108>
			currentscreenset23 = 0;
    1102:	10 92 45 08 	sts	0x0845, r1	; 0x800845 <currentscreenset23+0x1>
    1106:	10 92 44 08 	sts	0x0844, r1	; 0x800844 <currentscreenset23>
			display();
    110a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    110e:	08 95       	ret
		}
		else if ((set == 2) & (currentscreenset1==3) & (currentscreenset23 != 4)){
    1110:	ee 23       	and	r30, r30
    1112:	51 f0       	breq	.+20     	; 0x1128 <_Z6dwnbtnv+0x120>
    1114:	33 23       	and	r19, r19
    1116:	41 f0       	breq	.+16     	; 0x1128 <_Z6dwnbtnv+0x120>
			currentscreenset23 += 1;
    1118:	4f 5f       	subi	r20, 0xFF	; 255
    111a:	5f 4f       	sbci	r21, 0xFF	; 255
    111c:	50 93 45 08 	sts	0x0845, r21	; 0x800845 <currentscreenset23+0x1>
    1120:	40 93 44 08 	sts	0x0844, r20	; 0x800844 <currentscreenset23>
			display();
    1124:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1128:	08 95       	ret

0000112a <_Z5okbtnv>:
		}
	}
}

void okbtn(){
	if (PINC & (1<<Ok)){
    112a:	32 9b       	sbis	0x06, 2	; 6
    112c:	15 c0       	rjmp	.+42     	; 0x1158 <_Z5okbtnv+0x2e>
		if (set==2){
    112e:	80 91 4a 08 	lds	r24, 0x084A	; 0x80084a <set>
    1132:	90 91 4b 08 	lds	r25, 0x084B	; 0x80084b <set+0x1>
    1136:	82 30       	cpi	r24, 0x02	; 2
    1138:	91 05       	cpc	r25, r1
    113a:	39 f4       	brne	.+14     	; 0x114a <_Z5okbtnv+0x20>
			set = 0;
    113c:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <set+0x1>
    1140:	10 92 4a 08 	sts	0x084A, r1	; 0x80084a <set>
		display();}
    1144:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1148:	08 95       	ret
		else {
			set+= 1;
    114a:	01 96       	adiw	r24, 0x01	; 1
    114c:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <set+0x1>
    1150:	80 93 4a 08 	sts	0x084A, r24	; 0x80084a <set>
		display();}
    1154:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1158:	08 95       	ret

0000115a <_Z7backbtnv>:
	}
}

void backbtn(){
	if (PINC &(1<<Back)){
    115a:	33 9b       	sbis	0x06, 3	; 6
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <_Z7backbtnv+0x2c>
		if (set == 0){
    115e:	80 91 4a 08 	lds	r24, 0x084A	; 0x80084a <set>
    1162:	90 91 4b 08 	lds	r25, 0x084B	; 0x80084b <set+0x1>
    1166:	00 97       	sbiw	r24, 0x00	; 0
    1168:	39 f4       	brne	.+14     	; 0x1178 <_Z7backbtnv+0x1e>
			set = 0;
    116a:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <set+0x1>
    116e:	10 92 4a 08 	sts	0x084A, r1	; 0x80084a <set>
			display();
    1172:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1176:	08 95       	ret
		}
		else {
			set-= 1;
    1178:	01 97       	sbiw	r24, 0x01	; 1
    117a:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <set+0x1>
    117e:	80 93 4a 08 	sts	0x084A, r24	; 0x80084a <set>
			display();
    1182:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z7displayv>
    1186:	08 95       	ret

00001188 <_Z10checkAlarmv>:
		}
	}
}

void checkAlarm(){
    1188:	cf 92       	push	r12
    118a:	df 92       	push	r13
    118c:	ef 92       	push	r14
    118e:	ff 92       	push	r15
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
	int currentHr, currentMin, alarmHr, alarmMin, currentAlarm;
	//checking time and ringing an alarm
	for (int i=0; i<alarmCount;i++){
    1198:	e1 2c       	mov	r14, r1
    119a:	f1 2c       	mov	r15, r1
    119c:	80 91 1a 08 	lds	r24, 0x081A	; 0x80081a <alarmCount>
    11a0:	90 91 1b 08 	lds	r25, 0x081B	; 0x80081b <alarmCount+0x1>
    11a4:	e8 16       	cp	r14, r24
    11a6:	f9 06       	cpc	r15, r25
    11a8:	0c f0       	brlt	.+2      	; 0x11ac <_Z10checkAlarmv+0x24>
    11aa:	40 c0       	rjmp	.+128    	; 0x122c <_Z10checkAlarmv+0xa4>
		alarmHr = allAlarms[i][0];
    11ac:	f7 01       	movw	r30, r14
    11ae:	ee 0f       	add	r30, r30
    11b0:	ff 1f       	adc	r31, r31
    11b2:	ee 0f       	add	r30, r30
    11b4:	ff 1f       	adc	r31, r31
    11b6:	e4 5e       	subi	r30, 0xE4	; 228
    11b8:	f7 4f       	sbci	r31, 0xF7	; 247
    11ba:	c0 81       	ld	r28, Z
    11bc:	d1 81       	ldd	r29, Z+1	; 0x01
		alarmMin = allAlarms[i][1];
    11be:	02 81       	ldd	r16, Z+2	; 0x02
    11c0:	13 81       	ldd	r17, Z+3	; 0x03
		if (((currentHr != alarmHr) || (currentMin != alarmMin)) & (currentAlarm==i)){
			stop = false;
		}	*/
		
		while (1){
			currentHr = DS1307.read_time(02);
    11c2:	62 e0       	ldi	r22, 0x02	; 2
    11c4:	80 e6       	ldi	r24, 0x60	; 96
    11c6:	98 e0       	ldi	r25, 0x08	; 8
    11c8:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6ds13079read_timeEh>
    11cc:	6c 01       	movw	r12, r24
			currentMin = DS1307.read_time(01);
    11ce:	61 e0       	ldi	r22, 0x01	; 1
    11d0:	80 e6       	ldi	r24, 0x60	; 96
    11d2:	98 e0       	ldi	r25, 0x08	; 8
    11d4:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_ZN6ds13079read_timeEh>
    11d8:	9c 01       	movw	r18, r24
			if ((currentHr == alarmHr) & (currentMin == alarmMin)  /*& ~(stop)*/){
    11da:	91 e0       	ldi	r25, 0x01	; 1
    11dc:	cc 15       	cp	r28, r12
    11de:	dd 05       	cpc	r29, r13
    11e0:	09 f0       	breq	.+2      	; 0x11e4 <_Z10checkAlarmv+0x5c>
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	99 23       	and	r25, r25
    11e6:	d9 f0       	breq	.+54     	; 0x121e <_Z10checkAlarmv+0x96>
    11e8:	91 e0       	ldi	r25, 0x01	; 1
    11ea:	02 17       	cp	r16, r18
    11ec:	13 07       	cpc	r17, r19
    11ee:	09 f0       	breq	.+2      	; 0x11f2 <_Z10checkAlarmv+0x6a>
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	99 23       	and	r25, r25
    11f4:	a1 f0       	breq	.+40     	; 0x121e <_Z10checkAlarmv+0x96>
				//lcd.LCD_Clear();
				lcd.LCD_String_xy(0, 0, "     Alarm      ");
    11f6:	27 ee       	ldi	r18, 0xE7	; 231
    11f8:	37 e0       	ldi	r19, 0x07	; 7
    11fa:	40 e0       	ldi	r20, 0x00	; 0
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	8a e5       	ldi	r24, 0x5A	; 90
    1200:	98 e0       	ldi	r25, 0x08	; 8
    1202:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
				lcd.LCD_String_xy(1, 0, "STOP            ");
    1206:	28 ef       	ldi	r18, 0xF8	; 248
    1208:	37 e0       	ldi	r19, 0x07	; 7
    120a:	40 e0       	ldi	r20, 0x00	; 0
    120c:	61 e0       	ldi	r22, 0x01	; 1
    120e:	8a e5       	ldi	r24, 0x5A	; 90
    1210:	98 e0       	ldi	r25, 0x08	; 8
    1212:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN11LCD_Display13LCD_String_xyEccPc>
				PORTD |= (1<<PORTD7);
    1216:	8b b1       	in	r24, 0x0b	; 11
    1218:	80 68       	ori	r24, 0x80	; 128
    121a:	8b b9       	out	0x0b, r24	; 11
		/*
		if (((currentHr != alarmHr) || (currentMin != alarmMin)) & (currentAlarm==i)){
			stop = false;
		}	*/
		
		while (1){
    121c:	d2 cf       	rjmp	.-92     	; 0x11c2 <_Z10checkAlarmv+0x3a>
				lcd.LCD_String_xy(1, 0, "STOP            ");
				PORTD |= (1<<PORTD7);
				currentAlarm = i;
			}
			else{
				PORTD &= ~(1<<PORTD7);
    121e:	8b b1       	in	r24, 0x0b	; 11
    1220:	8f 77       	andi	r24, 0x7F	; 127
    1222:	8b b9       	out	0x0b, r24	; 11
}

void checkAlarm(){
	int currentHr, currentMin, alarmHr, alarmMin, currentAlarm;
	//checking time and ringing an alarm
	for (int i=0; i<alarmCount;i++){
    1224:	8f ef       	ldi	r24, 0xFF	; 255
    1226:	e8 1a       	sub	r14, r24
    1228:	f8 0a       	sbc	r15, r24
    122a:	b8 cf       	rjmp	.-144    	; 0x119c <_Z10checkAlarmv+0x14>
				break;
			}
			*/			
		}
	}
}
    122c:	df 91       	pop	r29
    122e:	cf 91       	pop	r28
    1230:	1f 91       	pop	r17
    1232:	0f 91       	pop	r16
    1234:	ff 90       	pop	r15
    1236:	ef 90       	pop	r14
    1238:	df 90       	pop	r13
    123a:	cf 90       	pop	r12
    123c:	08 95       	ret

0000123e <main>:

//bool stop=false;	


int main(void)
{
    123e:	cf 93       	push	r28
    1240:	df 93       	push	r29
    1242:	cd b7       	in	r28, 0x3d	; 61
    1244:	de b7       	in	r29, 0x3e	; 62
    1246:	27 97       	sbiw	r28, 0x07	; 7
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	f8 94       	cli
    124c:	de bf       	out	0x3e, r29	; 62
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	cd bf       	out	0x3d, r28	; 61
	DDRD = 0b10000000;
    1252:	80 e8       	ldi	r24, 0x80	; 128
    1254:	8a b9       	out	0x0a, r24	; 10
	ds1307::rtc_t rtc;

	// Setting time to the RTC
	rtc.seconds =  0x00; //
    1256:	19 82       	std	Y+1, r1	; 0x01
	rtc.minute =  0x00;
    1258:	1a 82       	std	Y+2, r1	; 0x02
	rtc.hour = 0x12;	//  20:17:00
    125a:	82 e1       	ldi	r24, 0x12	; 18
    125c:	8b 83       	std	Y+3, r24	; 0x03
	rtc.weekDay = 0x05;
    125e:	85 e0       	ldi	r24, 0x05	; 5
    1260:	8c 83       	std	Y+4, r24	; 0x04
	rtc.date = 0x31;
    1262:	91 e3       	ldi	r25, 0x31	; 49
    1264:	9d 83       	std	Y+5, r25	; 0x05
	rtc.month = 0x05;
    1266:	8e 83       	std	Y+6, r24	; 0x06
	rtc.year = 0x21;	//27th May 2021
    1268:	81 e2       	ldi	r24, 0x21	; 33
    126a:	8f 83       	std	Y+7, r24	; 0x07
	
	DS1307.set_time(&rtc);
    126c:	be 01       	movw	r22, r28
    126e:	6f 5f       	subi	r22, 0xFF	; 255
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	80 e6       	ldi	r24, 0x60	; 96
    1274:	98 e0       	ldi	r25, 0x08	; 8
    1276:	0e 94 18 04 	call	0x830	; 0x830 <_ZN6ds13078set_timeEPNS_5rtc_tE>

	lcd.LCD_Initializer();	//initialize the display (PORTB)
    127a:	8a e5       	ldi	r24, 0x5A	; 90
    127c:	98 e0       	ldi	r25, 0x08	; 8
    127e:	0e 94 18 05 	call	0xa30	; 0xa30 <_ZN11LCD_Display15LCD_InitializerEv>

	while (1)
	{
		
		checkAlarm();
    1282:	0e 94 c4 08 	call	0x1188	; 0x1188 <_Z10checkAlarmv>
		if (set==0){alarmclock.displayTime();}
    1286:	80 91 4a 08 	lds	r24, 0x084A	; 0x80084a <set>
    128a:	90 91 4b 08 	lds	r25, 0x084B	; 0x80084b <set+0x1>
    128e:	89 2b       	or	r24, r25
    1290:	21 f4       	brne	.+8      	; 0x129a <main+0x5c>
    1292:	88 e5       	ldi	r24, 0x58	; 88
    1294:	98 e0       	ldi	r25, 0x08	; 8
    1296:	0e 94 7b 00 	call	0xf6	; 0xf6 <_ZN10AlarmClock11displayTimeEv>
		okbtn();
    129a:	0e 94 95 08 	call	0x112a	; 0x112a <_Z5okbtnv>
		upbtn();
    129e:	0e 94 77 07 	call	0xeee	; 0xeee <_Z5upbtnv>
		dwnbtn();
    12a2:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z6dwnbtnv>
		backbtn();
    12a6:	0e 94 ad 08 	call	0x115a	; 0x115a <_Z7backbtnv>
	
	DS1307.set_time(&rtc);

	lcd.LCD_Initializer();	//initialize the display (PORTB)

	while (1)
    12aa:	eb cf       	rjmp	.-42     	; 0x1282 <main+0x44>

000012ac <_ZN15music_notations11playthenoteEff>:
    12ac:	4f 92       	push	r4
    12ae:	5f 92       	push	r5
    12b0:	6f 92       	push	r6
    12b2:	7f 92       	push	r7
    12b4:	8f 92       	push	r8
    12b6:	9f 92       	push	r9
    12b8:	af 92       	push	r10
    12ba:	bf 92       	push	r11
    12bc:	cf 92       	push	r12
    12be:	df 92       	push	r13
    12c0:	ef 92       	push	r14
    12c2:	ff 92       	push	r15
    12c4:	0f 93       	push	r16
    12c6:	1f 93       	push	r17
    12c8:	cf 93       	push	r28
    12ca:	df 93       	push	r29
    12cc:	00 d0       	rcall	.+0      	; 0x12ce <_ZN15music_notations11playthenoteEff+0x22>
    12ce:	00 d0       	rcall	.+0      	; 0x12d0 <_ZN15music_notations11playthenoteEff+0x24>
    12d0:	cd b7       	in	r28, 0x3d	; 61
    12d2:	de b7       	in	r29, 0x3e	; 62
    12d4:	6a 01       	movw	r12, r20
    12d6:	7b 01       	movw	r14, r22
    12d8:	48 01       	movw	r8, r16
    12da:	59 01       	movw	r10, r18
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	a9 01       	movw	r20, r18
    12e2:	c7 01       	movw	r24, r14
    12e4:	b6 01       	movw	r22, r12
    12e6:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    12ea:	88 23       	and	r24, r24
    12ec:	09 f4       	brne	.+2      	; 0x12f0 <_ZN15music_notations11playthenoteEff+0x44>
    12ee:	b0 c0       	rjmp	.+352    	; 0x1450 <_ZN15music_notations11playthenoteEff+0x1a4>
    12f0:	a7 01       	movw	r20, r14
    12f2:	96 01       	movw	r18, r12
    12f4:	60 e0       	ldi	r22, 0x00	; 0
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	80 e8       	ldi	r24, 0x80	; 128
    12fa:	9f e3       	ldi	r25, 0x3F	; 63
    12fc:	0e 94 43 0c 	call	0x1886	; 0x1886 <__divsf3>
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	4a e7       	ldi	r20, 0x7A	; 122
    1306:	54 e4       	ldi	r21, 0x44	; 68
    1308:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    130c:	6b 01       	movw	r12, r22
    130e:	7c 01       	movw	r14, r24
    1310:	9b 01       	movw	r18, r22
    1312:	ac 01       	movw	r20, r24
    1314:	c5 01       	movw	r24, r10
    1316:	b4 01       	movw	r22, r8
    1318:	0e 94 43 0c 	call	0x1886	; 0x1886 <__divsf3>
    131c:	0e 94 b5 0c 	call	0x196a	; 0x196a <__fixsfsi>
    1320:	2b 01       	movw	r4, r22
    1322:	3c 01       	movw	r6, r24
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	40 e0       	ldi	r20, 0x00	; 0
    132a:	5f e3       	ldi	r21, 0x3F	; 63
    132c:	c7 01       	movw	r24, r14
    132e:	b6 01       	movw	r22, r12
    1330:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1334:	69 83       	std	Y+1, r22	; 0x01
    1336:	7a 83       	std	Y+2, r23	; 0x02
    1338:	8b 83       	std	Y+3, r24	; 0x03
    133a:	9c 83       	std	Y+4, r25	; 0x04
    133c:	8a b1       	in	r24, 0x0a	; 10
    133e:	80 68       	ori	r24, 0x80	; 128
    1340:	8a b9       	out	0x0a, r24	; 10
    1342:	81 2c       	mov	r8, r1
    1344:	91 2c       	mov	r9, r1
    1346:	54 01       	movw	r10, r8
    1348:	84 14       	cp	r8, r4
    134a:	95 04       	cpc	r9, r5
    134c:	a6 04       	cpc	r10, r6
    134e:	b7 04       	cpc	r11, r7
    1350:	0c f0       	brlt	.+2      	; 0x1354 <_ZN15music_notations11playthenoteEff+0xa8>
    1352:	b8 c0       	rjmp	.+368    	; 0x14c4 <_ZN15music_notations11playthenoteEff+0x218>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	4a ef       	ldi	r20, 0xFA	; 250
    135a:	54 e4       	ldi	r21, 0x44	; 68
    135c:	69 81       	ldd	r22, Y+1	; 0x01
    135e:	7a 81       	ldd	r23, Y+2	; 0x02
    1360:	8b 81       	ldd	r24, Y+3	; 0x03
    1362:	9c 81       	ldd	r25, Y+4	; 0x04
    1364:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1368:	6b 01       	movw	r12, r22
    136a:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    136c:	20 e0       	ldi	r18, 0x00	; 0
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	40 e8       	ldi	r20, 0x80	; 128
    1372:	5f e3       	ldi	r21, 0x3F	; 63
    1374:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    1378:	88 23       	and	r24, r24
    137a:	2c f1       	brlt	.+74     	; 0x13c6 <_ZN15music_notations11playthenoteEff+0x11a>
		__ticks = 1;
	else if (__tmp > 65535)
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	3f ef       	ldi	r19, 0xFF	; 255
    1380:	4f e7       	ldi	r20, 0x7F	; 127
    1382:	57 e4       	ldi	r21, 0x47	; 71
    1384:	c7 01       	movw	r24, r14
    1386:	b6 01       	movw	r22, r12
    1388:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    138c:	18 16       	cp	r1, r24
    138e:	b4 f4       	brge	.+44     	; 0x13bc <_ZN15music_notations11playthenoteEff+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1390:	20 e0       	ldi	r18, 0x00	; 0
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	40 e2       	ldi	r20, 0x20	; 32
    1396:	51 e4       	ldi	r21, 0x41	; 65
    1398:	69 81       	ldd	r22, Y+1	; 0x01
    139a:	7a 81       	ldd	r23, Y+2	; 0x02
    139c:	8b 81       	ldd	r24, Y+3	; 0x03
    139e:	9c 81       	ldd	r25, Y+4	; 0x04
    13a0:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    13a4:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
		while(__ticks)
    13a8:	61 15       	cp	r22, r1
    13aa:	71 05       	cpc	r23, r1
    13ac:	89 f0       	breq	.+34     	; 0x13d0 <_ZN15music_notations11playthenoteEff+0x124>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    13ae:	88 ec       	ldi	r24, 0xC8	; 200
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	01 97       	sbiw	r24, 0x01	; 1
    13b4:	f1 f7       	brne	.-4      	; 0x13b2 <_ZN15music_notations11playthenoteEff+0x106>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13b6:	61 50       	subi	r22, 0x01	; 1
    13b8:	71 09       	sbc	r23, r1
    13ba:	f6 cf       	rjmp	.-20     	; 0x13a8 <_ZN15music_notations11playthenoteEff+0xfc>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13bc:	c7 01       	movw	r24, r14
    13be:	b6 01       	movw	r22, r12
    13c0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <_ZN15music_notations11playthenoteEff+0x11e>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    13c6:	61 e0       	ldi	r22, 0x01	; 1
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	cb 01       	movw	r24, r22
    13cc:	01 97       	sbiw	r24, 0x01	; 1
    13ce:	f1 f7       	brne	.-4      	; 0x13cc <_ZN15music_notations11playthenoteEff+0x120>
    13d0:	8b b1       	in	r24, 0x0b	; 11
    13d2:	80 68       	ori	r24, 0x80	; 128
    13d4:	8b b9       	out	0x0b, r24	; 11
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
    13d6:	20 e0       	ldi	r18, 0x00	; 0
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	40 e8       	ldi	r20, 0x80	; 128
    13dc:	5f e3       	ldi	r21, 0x3F	; 63
    13de:	c7 01       	movw	r24, r14
    13e0:	b6 01       	movw	r22, r12
    13e2:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    13e6:	88 23       	and	r24, r24
    13e8:	2c f1       	brlt	.+74     	; 0x1434 <_ZN15music_notations11playthenoteEff+0x188>
		__ticks = 1;
	else if (__tmp > 65535)
    13ea:	20 e0       	ldi	r18, 0x00	; 0
    13ec:	3f ef       	ldi	r19, 0xFF	; 255
    13ee:	4f e7       	ldi	r20, 0x7F	; 127
    13f0:	57 e4       	ldi	r21, 0x47	; 71
    13f2:	c7 01       	movw	r24, r14
    13f4:	b6 01       	movw	r22, r12
    13f6:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    13fa:	18 16       	cp	r1, r24
    13fc:	b4 f4       	brge	.+44     	; 0x142a <_ZN15music_notations11playthenoteEff+0x17e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13fe:	20 e0       	ldi	r18, 0x00	; 0
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	40 e2       	ldi	r20, 0x20	; 32
    1404:	51 e4       	ldi	r21, 0x41	; 65
    1406:	69 81       	ldd	r22, Y+1	; 0x01
    1408:	7a 81       	ldd	r23, Y+2	; 0x02
    140a:	8b 81       	ldd	r24, Y+3	; 0x03
    140c:	9c 81       	ldd	r25, Y+4	; 0x04
    140e:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1412:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
		while(__ticks)
    1416:	61 15       	cp	r22, r1
    1418:	71 05       	cpc	r23, r1
    141a:	89 f0       	breq	.+34     	; 0x143e <_ZN15music_notations11playthenoteEff+0x192>
    141c:	88 ec       	ldi	r24, 0xC8	; 200
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <_ZN15music_notations11playthenoteEff+0x174>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1424:	61 50       	subi	r22, 0x01	; 1
    1426:	71 09       	sbc	r23, r1
    1428:	f6 cf       	rjmp	.-20     	; 0x1416 <_ZN15music_notations11playthenoteEff+0x16a>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    142a:	c7 01       	movw	r24, r14
    142c:	b6 01       	movw	r22, r12
    142e:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <_ZN15music_notations11playthenoteEff+0x18c>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1434:	61 e0       	ldi	r22, 0x01	; 1
    1436:	70 e0       	ldi	r23, 0x00	; 0
    1438:	cb 01       	movw	r24, r22
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	f1 f7       	brne	.-4      	; 0x143a <_ZN15music_notations11playthenoteEff+0x18e>
    143e:	8b b1       	in	r24, 0x0b	; 11
    1440:	8f 77       	andi	r24, 0x7F	; 127
    1442:	8b b9       	out	0x0b, r24	; 11
    1444:	8f ef       	ldi	r24, 0xFF	; 255
    1446:	88 1a       	sub	r8, r24
    1448:	98 0a       	sbc	r9, r24
    144a:	a8 0a       	sbc	r10, r24
    144c:	b8 0a       	sbc	r11, r24
    144e:	7c cf       	rjmp	.-264    	; 0x1348 <_ZN15music_notations11playthenoteEff+0x9c>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	4a ef       	ldi	r20, 0xFA	; 250
    1456:	54 e4       	ldi	r21, 0x44	; 68
    1458:	c5 01       	movw	r24, r10
    145a:	b4 01       	movw	r22, r8
    145c:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1460:	6b 01       	movw	r12, r22
    1462:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 e8       	ldi	r20, 0x80	; 128
    146a:	5f e3       	ldi	r21, 0x3F	; 63
    146c:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    1470:	88 23       	and	r24, r24
    1472:	1c f1       	brlt	.+70     	; 0x14ba <_ZN15music_notations11playthenoteEff+0x20e>
		__ticks = 1;
	else if (__tmp > 65535)
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	3f ef       	ldi	r19, 0xFF	; 255
    1478:	4f e7       	ldi	r20, 0x7F	; 127
    147a:	57 e4       	ldi	r21, 0x47	; 71
    147c:	c7 01       	movw	r24, r14
    147e:	b6 01       	movw	r22, r12
    1480:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    1484:	18 16       	cp	r1, r24
    1486:	a4 f4       	brge	.+40     	; 0x14b0 <_ZN15music_notations11playthenoteEff+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	40 e2       	ldi	r20, 0x20	; 32
    148e:	51 e4       	ldi	r21, 0x41	; 65
    1490:	c5 01       	movw	r24, r10
    1492:	b4 01       	movw	r22, r8
    1494:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1498:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
		while(__ticks)
    149c:	61 15       	cp	r22, r1
    149e:	71 05       	cpc	r23, r1
    14a0:	89 f0       	breq	.+34     	; 0x14c4 <_ZN15music_notations11playthenoteEff+0x218>
    14a2:	88 ec       	ldi	r24, 0xC8	; 200
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	01 97       	sbiw	r24, 0x01	; 1
    14a8:	f1 f7       	brne	.-4      	; 0x14a6 <_ZN15music_notations11playthenoteEff+0x1fa>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14aa:	61 50       	subi	r22, 0x01	; 1
    14ac:	71 09       	sbc	r23, r1
    14ae:	f6 cf       	rjmp	.-20     	; 0x149c <_ZN15music_notations11playthenoteEff+0x1f0>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14b0:	c7 01       	movw	r24, r14
    14b2:	b6 01       	movw	r22, r12
    14b4:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <_ZN15music_notations11playthenoteEff+0x212>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    14ba:	61 e0       	ldi	r22, 0x01	; 1
    14bc:	70 e0       	ldi	r23, 0x00	; 0
    14be:	cb 01       	movw	r24, r22
    14c0:	01 97       	sbiw	r24, 0x01	; 1
    14c2:	f1 f7       	brne	.-4      	; 0x14c0 <_ZN15music_notations11playthenoteEff+0x214>
    14c4:	0f 90       	pop	r0
    14c6:	0f 90       	pop	r0
    14c8:	0f 90       	pop	r0
    14ca:	0f 90       	pop	r0
    14cc:	df 91       	pop	r29
    14ce:	cf 91       	pop	r28
    14d0:	1f 91       	pop	r17
    14d2:	0f 91       	pop	r16
    14d4:	ff 90       	pop	r15
    14d6:	ef 90       	pop	r14
    14d8:	df 90       	pop	r13
    14da:	cf 90       	pop	r12
    14dc:	bf 90       	pop	r11
    14de:	af 90       	pop	r10
    14e0:	9f 90       	pop	r9
    14e2:	8f 90       	pop	r8
    14e4:	7f 90       	pop	r7
    14e6:	6f 90       	pop	r6
    14e8:	5f 90       	pop	r5
    14ea:	4f 90       	pop	r4
    14ec:	08 95       	ret

000014ee <_ZN15music_notations13playthemelodyEPiS0_i>:
    14ee:	2f 92       	push	r2
    14f0:	3f 92       	push	r3
    14f2:	4f 92       	push	r4
    14f4:	5f 92       	push	r5
    14f6:	6f 92       	push	r6
    14f8:	7f 92       	push	r7
    14fa:	8f 92       	push	r8
    14fc:	9f 92       	push	r9
    14fe:	af 92       	push	r10
    1500:	bf 92       	push	r11
    1502:	cf 92       	push	r12
    1504:	df 92       	push	r13
    1506:	ef 92       	push	r14
    1508:	ff 92       	push	r15
    150a:	0f 93       	push	r16
    150c:	1f 93       	push	r17
    150e:	cf 93       	push	r28
    1510:	df 93       	push	r29
    1512:	cd b7       	in	r28, 0x3d	; 61
    1514:	de b7       	in	r29, 0x3e	; 62
    1516:	29 97       	sbiw	r28, 0x09	; 9
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	f8 94       	cli
    151c:	de bf       	out	0x3e, r29	; 62
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	cd bf       	out	0x3d, r28	; 61
    1522:	9f 83       	std	Y+7, r25	; 0x07
    1524:	8e 83       	std	Y+6, r24	; 0x06
    1526:	2b 01       	movw	r4, r22
    1528:	1a 01       	movw	r2, r20
    152a:	39 01       	movw	r6, r18
    152c:	80 e0       	ldi	r24, 0x00	; 0
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	99 87       	std	Y+9, r25	; 0x09
    1532:	88 87       	std	Y+8, r24	; 0x08
    1534:	e8 85       	ldd	r30, Y+8	; 0x08
    1536:	f9 85       	ldd	r31, Y+9	; 0x09
    1538:	e6 15       	cp	r30, r6
    153a:	f7 05       	cpc	r31, r7
    153c:	0c f0       	brlt	.+2      	; 0x1540 <_ZN15music_notations13playthemelodyEPiS0_i+0x52>
    153e:	d5 c0       	rjmp	.+426    	; 0x16ea <_ZN15music_notations13playthemelodyEPiS0_i+0x1fc>
    1540:	7f 01       	movw	r14, r30
    1542:	ee 0c       	add	r14, r14
    1544:	ff 1c       	adc	r15, r15
    1546:	61 01       	movw	r12, r2
    1548:	ce 0c       	add	r12, r14
    154a:	df 1c       	adc	r13, r15
    154c:	f6 01       	movw	r30, r12
    154e:	60 81       	ld	r22, Z
    1550:	71 81       	ldd	r23, Z+1	; 0x01
    1552:	07 2e       	mov	r0, r23
    1554:	00 0c       	add	r0, r0
    1556:	88 0b       	sbc	r24, r24
    1558:	99 0b       	sbc	r25, r25
    155a:	0e 94 ed 0c 	call	0x19da	; 0x19da <__floatsisf>
    155e:	4b 01       	movw	r8, r22
    1560:	5c 01       	movw	r10, r24
    1562:	f2 01       	movw	r30, r4
    1564:	ee 0d       	add	r30, r14
    1566:	ff 1d       	adc	r31, r15
    1568:	60 81       	ld	r22, Z
    156a:	71 81       	ldd	r23, Z+1	; 0x01
    156c:	07 2e       	mov	r0, r23
    156e:	00 0c       	add	r0, r0
    1570:	88 0b       	sbc	r24, r24
    1572:	99 0b       	sbc	r25, r25
    1574:	0e 94 ed 0c 	call	0x19da	; 0x19da <__floatsisf>
    1578:	ab 01       	movw	r20, r22
    157a:	bc 01       	movw	r22, r24
    157c:	95 01       	movw	r18, r10
    157e:	84 01       	movw	r16, r8
    1580:	8e 81       	ldd	r24, Y+6	; 0x06
    1582:	9f 81       	ldd	r25, Y+7	; 0x07
    1584:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN15music_notations11playthenoteEff>
    1588:	f6 01       	movw	r30, r12
    158a:	60 81       	ld	r22, Z
    158c:	71 81       	ldd	r23, Z+1	; 0x01
    158e:	07 2e       	mov	r0, r23
    1590:	00 0c       	add	r0, r0
    1592:	88 0b       	sbc	r24, r24
    1594:	99 0b       	sbc	r25, r25
    1596:	0e 94 ed 0c 	call	0x19da	; 0x19da <__floatsisf>
    159a:	6b 01       	movw	r12, r22
    159c:	7c 01       	movw	r14, r24
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    159e:	2b ea       	ldi	r18, 0xAB	; 171
    15a0:	3a ea       	ldi	r19, 0xAA	; 170
    15a2:	4a e2       	ldi	r20, 0x2A	; 42
    15a4:	50 e4       	ldi	r21, 0x40	; 64
    15a6:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    15aa:	4b 01       	movw	r8, r22
    15ac:	5c 01       	movw	r10, r24
	__tmp2 = ((F_CPU) / 4e6) * __us;
    15ae:	a7 01       	movw	r20, r14
    15b0:	96 01       	movw	r18, r12
    15b2:	c7 01       	movw	r24, r14
    15b4:	b6 01       	movw	r22, r12
    15b6:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <__addsf3>
    15ba:	69 83       	std	Y+1, r22	; 0x01
    15bc:	7a 83       	std	Y+2, r23	; 0x02
    15be:	8b 83       	std	Y+3, r24	; 0x03
    15c0:	9c 83       	std	Y+4, r25	; 0x04
	if (__tmp < 1.0)
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e8       	ldi	r20, 0x80	; 128
    15c8:	5f e3       	ldi	r21, 0x3F	; 63
    15ca:	c5 01       	movw	r24, r10
    15cc:	b4 01       	movw	r22, r8
    15ce:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    15d2:	88 23       	and	r24, r24
    15d4:	0c f4       	brge	.+2      	; 0x15d8 <_ZN15music_notations13playthemelodyEPiS0_i+0xea>
    15d6:	6a c0       	rjmp	.+212    	; 0x16ac <_ZN15music_notations13playthemelodyEPiS0_i+0x1be>
		__ticks = 1;
	else if (__tmp2 > 65535)
    15d8:	20 e0       	ldi	r18, 0x00	; 0
    15da:	3f ef       	ldi	r19, 0xFF	; 255
    15dc:	4f e7       	ldi	r20, 0x7F	; 127
    15de:	57 e4       	ldi	r21, 0x47	; 71
    15e0:	69 81       	ldd	r22, Y+1	; 0x01
    15e2:	7a 81       	ldd	r23, Y+2	; 0x02
    15e4:	8b 81       	ldd	r24, Y+3	; 0x03
    15e6:	9c 81       	ldd	r25, Y+4	; 0x04
    15e8:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    15ec:	18 16       	cp	r1, r24
    15ee:	0c f0       	brlt	.+2      	; 0x15f2 <_ZN15music_notations13playthemelodyEPiS0_i+0x104>
    15f0:	43 c0       	rjmp	.+134    	; 0x1678 <_ZN15music_notations13playthemelodyEPiS0_i+0x18a>
	{
		_delay_ms(__us / 1000.0);
    15f2:	20 e0       	ldi	r18, 0x00	; 0
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	4a e7       	ldi	r20, 0x7A	; 122
    15f8:	54 e4       	ldi	r21, 0x44	; 68
    15fa:	c7 01       	movw	r24, r14
    15fc:	b6 01       	movw	r22, r12
    15fe:	0e 94 43 0c 	call	0x1886	; 0x1886 <__divsf3>
    1602:	4b 01       	movw	r8, r22
    1604:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	4a ef       	ldi	r20, 0xFA	; 250
    160c:	54 e4       	ldi	r21, 0x44	; 68
    160e:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    1612:	6b 01       	movw	r12, r22
    1614:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1616:	20 e0       	ldi	r18, 0x00	; 0
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	40 e8       	ldi	r20, 0x80	; 128
    161c:	5f e3       	ldi	r21, 0x3F	; 63
    161e:	0e 94 3e 0c 	call	0x187c	; 0x187c <__cmpsf2>
    1622:	88 23       	and	r24, r24
    1624:	1c f1       	brlt	.+70     	; 0x166c <_ZN15music_notations13playthemelodyEPiS0_i+0x17e>
		__ticks = 1;
	else if (__tmp > 65535)
    1626:	20 e0       	ldi	r18, 0x00	; 0
    1628:	3f ef       	ldi	r19, 0xFF	; 255
    162a:	4f e7       	ldi	r20, 0x7F	; 127
    162c:	57 e4       	ldi	r21, 0x47	; 71
    162e:	c7 01       	movw	r24, r14
    1630:	b6 01       	movw	r22, r12
    1632:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    1636:	18 16       	cp	r1, r24
    1638:	a4 f4       	brge	.+40     	; 0x1662 <_ZN15music_notations13playthemelodyEPiS0_i+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	40 e2       	ldi	r20, 0x20	; 32
    1640:	51 e4       	ldi	r21, 0x41	; 65
    1642:	c5 01       	movw	r24, r10
    1644:	b4 01       	movw	r22, r8
    1646:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <__mulsf3>
    164a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
		while(__ticks)
    164e:	61 15       	cp	r22, r1
    1650:	71 05       	cpc	r23, r1
    1652:	79 f1       	breq	.+94     	; 0x16b2 <_ZN15music_notations13playthemelodyEPiS0_i+0x1c4>
    1654:	88 ec       	ldi	r24, 0xC8	; 200
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	01 97       	sbiw	r24, 0x01	; 1
    165a:	f1 f7       	brne	.-4      	; 0x1658 <_ZN15music_notations13playthemelodyEPiS0_i+0x16a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    165c:	61 50       	subi	r22, 0x01	; 1
    165e:	71 09       	sbc	r23, r1
    1660:	f6 cf       	rjmp	.-20     	; 0x164e <_ZN15music_notations13playthemelodyEPiS0_i+0x160>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1662:	c7 01       	movw	r24, r14
    1664:	b6 01       	movw	r22, r12
    1666:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <_ZN15music_notations13playthemelodyEPiS0_i+0x182>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    166c:	61 e0       	ldi	r22, 0x01	; 1
    166e:	70 e0       	ldi	r23, 0x00	; 0
    1670:	cb 01       	movw	r24, r22
    1672:	01 97       	sbiw	r24, 0x01	; 1
    1674:	f1 f7       	brne	.-4      	; 0x1672 <_ZN15music_notations13playthemelodyEPiS0_i+0x184>
    1676:	1d c0       	rjmp	.+58     	; 0x16b2 <_ZN15music_notations13playthemelodyEPiS0_i+0x1c4>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1678:	20 e0       	ldi	r18, 0x00	; 0
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	4f e7       	ldi	r20, 0x7F	; 127
    167e:	53 e4       	ldi	r21, 0x43	; 67
    1680:	c5 01       	movw	r24, r10
    1682:	b4 01       	movw	r22, r8
    1684:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__gesf2>
    1688:	18 16       	cp	r1, r24
    168a:	54 f4       	brge	.+20     	; 0x16a0 <_ZN15music_notations13playthemelodyEPiS0_i+0x1b2>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    168c:	69 81       	ldd	r22, Y+1	; 0x01
    168e:	7a 81       	ldd	r23, Y+2	; 0x02
    1690:	8b 81       	ldd	r24, Y+3	; 0x03
    1692:	9c 81       	ldd	r25, Y+4	; 0x04
    1694:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    1698:	cb 01       	movw	r24, r22
    169a:	01 97       	sbiw	r24, 0x01	; 1
    169c:	f1 f7       	brne	.-4      	; 0x169a <_ZN15music_notations13playthemelodyEPiS0_i+0x1ac>
    169e:	0c c0       	rjmp	.+24     	; 0x16b8 <_ZN15music_notations13playthemelodyEPiS0_i+0x1ca>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    16a0:	c5 01       	movw	r24, r10
    16a2:	b4 01       	movw	r22, r8
    16a4:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    16a8:	6d 83       	std	Y+5, r22	; 0x05
    16aa:	03 c0       	rjmp	.+6      	; 0x16b2 <_ZN15music_notations13playthemelodyEPiS0_i+0x1c4>
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
	__tmp2 = ((F_CPU) / 4e6) * __us;
	if (__tmp < 1.0)
		__ticks = 1;
    16ac:	91 e0       	ldi	r25, 0x01	; 1
    16ae:	9d 83       	std	Y+5, r25	; 0x05
    16b0:	00 c0       	rjmp	.+0      	; 0x16b2 <_ZN15music_notations13playthemelodyEPiS0_i+0x1c4>
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
    16b2:	8d 81       	ldd	r24, Y+5	; 0x05
    16b4:	8a 95       	dec	r24
    16b6:	f1 f7       	brne	.-4      	; 0x16b4 <_ZN15music_notations13playthemelodyEPiS0_i+0x1c6>
    16b8:	32 99       	sbic	0x06, 2	; 6
    16ba:	08 c0       	rjmp	.+16     	; 0x16cc <_ZN15music_notations13playthemelodyEPiS0_i+0x1de>
    16bc:	30 99       	sbic	0x06, 0	; 6
    16be:	08 c0       	rjmp	.+16     	; 0x16d0 <_ZN15music_notations13playthemelodyEPiS0_i+0x1e2>
    16c0:	31 99       	sbic	0x06, 1	; 6
    16c2:	08 c0       	rjmp	.+16     	; 0x16d4 <_ZN15music_notations13playthemelodyEPiS0_i+0x1e6>
    16c4:	33 9b       	sbis	0x06, 3	; 6
    16c6:	08 c0       	rjmp	.+16     	; 0x16d8 <_ZN15music_notations13playthemelodyEPiS0_i+0x1ea>
    16c8:	81 e0       	ldi	r24, 0x01	; 1
    16ca:	07 c0       	rjmp	.+14     	; 0x16da <_ZN15music_notations13playthemelodyEPiS0_i+0x1ec>
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <_ZN15music_notations13playthemelodyEPiS0_i+0x1ec>
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	03 c0       	rjmp	.+6      	; 0x16da <_ZN15music_notations13playthemelodyEPiS0_i+0x1ec>
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	01 c0       	rjmp	.+2      	; 0x16da <_ZN15music_notations13playthemelodyEPiS0_i+0x1ec>
    16d8:	80 e0       	ldi	r24, 0x00	; 0
    16da:	81 11       	cpse	r24, r1
    16dc:	06 c0       	rjmp	.+12     	; 0x16ea <_ZN15music_notations13playthemelodyEPiS0_i+0x1fc>
    16de:	88 85       	ldd	r24, Y+8	; 0x08
    16e0:	99 85       	ldd	r25, Y+9	; 0x09
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	99 87       	std	Y+9, r25	; 0x09
    16e6:	88 87       	std	Y+8, r24	; 0x08
    16e8:	25 cf       	rjmp	.-438    	; 0x1534 <_ZN15music_notations13playthemelodyEPiS0_i+0x46>
    16ea:	29 96       	adiw	r28, 0x09	; 9
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	f8 94       	cli
    16f0:	de bf       	out	0x3e, r29	; 62
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	cd bf       	out	0x3d, r28	; 61
    16f6:	df 91       	pop	r29
    16f8:	cf 91       	pop	r28
    16fa:	1f 91       	pop	r17
    16fc:	0f 91       	pop	r16
    16fe:	ff 90       	pop	r15
    1700:	ef 90       	pop	r14
    1702:	df 90       	pop	r13
    1704:	cf 90       	pop	r12
    1706:	bf 90       	pop	r11
    1708:	af 90       	pop	r10
    170a:	9f 90       	pop	r9
    170c:	8f 90       	pop	r8
    170e:	7f 90       	pop	r7
    1710:	6f 90       	pop	r6
    1712:	5f 90       	pop	r5
    1714:	4f 90       	pop	r4
    1716:	3f 90       	pop	r3
    1718:	2f 90       	pop	r2
    171a:	08 95       	ret

0000171c <_ZN15music_notations4toneEi>:
    171c:	61 15       	cp	r22, r1
    171e:	71 05       	cpc	r23, r1
    1720:	59 f4       	brne	.+22     	; 0x1738 <_ZN15music_notations4toneEi+0x1c>
    1722:	20 91 98 03 	lds	r18, 0x0398	; 0x800398 <sizeofgot>
    1726:	30 91 99 03 	lds	r19, 0x0399	; 0x800399 <sizeofgot+0x1>
    172a:	42 e5       	ldi	r20, 0x52	; 82
    172c:	57 e0       	ldi	r21, 0x07	; 7
    172e:	66 e7       	ldi	r22, 0x76	; 118
    1730:	77 e0       	ldi	r23, 0x07	; 7
    1732:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN15music_notations13playthemelodyEPiS0_i>
    1736:	08 95       	ret
    1738:	61 30       	cpi	r22, 0x01	; 1
    173a:	71 05       	cpc	r23, r1
    173c:	59 f4       	brne	.+22     	; 0x1754 <_ZN15music_notations4toneEi+0x38>
    173e:	20 91 96 03 	lds	r18, 0x0396	; 0x800396 <sizeofpirates>
    1742:	30 91 97 03 	lds	r19, 0x0397	; 0x800397 <sizeofpirates+0x1>
    1746:	42 e2       	ldi	r20, 0x22	; 34
    1748:	56 e0       	ldi	r21, 0x06	; 6
    174a:	6a eb       	ldi	r22, 0xBA	; 186
    174c:	76 e0       	ldi	r23, 0x06	; 6
    174e:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN15music_notations13playthemelodyEPiS0_i>
    1752:	08 95       	ret
    1754:	62 30       	cpi	r22, 0x02	; 2
    1756:	71 05       	cpc	r23, r1
    1758:	59 f4       	brne	.+22     	; 0x1770 <_ZN15music_notations4toneEi+0x54>
    175a:	20 91 94 03 	lds	r18, 0x0394	; 0x800394 <sizeofstarwars>
    175e:	30 91 95 03 	lds	r19, 0x0395	; 0x800395 <sizeofstarwars+0x1>
    1762:	4a e8       	ldi	r20, 0x8A	; 138
    1764:	55 e0       	ldi	r21, 0x05	; 5
    1766:	66 ed       	ldi	r22, 0xD6	; 214
    1768:	75 e0       	ldi	r23, 0x05	; 5
    176a:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN15music_notations13playthemelodyEPiS0_i>
    176e:	08 95       	ret
    1770:	63 30       	cpi	r22, 0x03	; 3
    1772:	71 05       	cpc	r23, r1
    1774:	59 f4       	brne	.+22     	; 0x178c <_ZN15music_notations4toneEi+0x70>
    1776:	20 91 92 03 	lds	r18, 0x0392	; 0x800392 <sizeofcoffindance>
    177a:	30 91 93 03 	lds	r19, 0x0393	; 0x800393 <sizeofcoffindance+0x1>
    177e:	4a ef       	ldi	r20, 0xFA	; 250
    1780:	53 e0       	ldi	r21, 0x03	; 3
    1782:	62 ec       	ldi	r22, 0xC2	; 194
    1784:	74 e0       	ldi	r23, 0x04	; 4
    1786:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN15music_notations13playthemelodyEPiS0_i>
    178a:	08 95       	ret
    178c:	20 91 90 03 	lds	r18, 0x0390	; 0x800390 <sizeoftakeonme>
    1790:	30 91 91 03 	lds	r19, 0x0391	; 0x800391 <sizeoftakeonme+0x1>
    1794:	4a e9       	ldi	r20, 0x9A	; 154
    1796:	53 e0       	ldi	r21, 0x03	; 3
    1798:	6a ec       	ldi	r22, 0xCA	; 202
    179a:	73 e0       	ldi	r23, 0x03	; 3
    179c:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN15music_notations13playthemelodyEPiS0_i>
    17a0:	08 95       	ret

000017a2 <__subsf3>:
    17a2:	50 58       	subi	r21, 0x80	; 128

000017a4 <__addsf3>:
    17a4:	bb 27       	eor	r27, r27
    17a6:	aa 27       	eor	r26, r26
    17a8:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <__addsf3x>
    17ac:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__fp_round>
    17b0:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__fp_pscA>
    17b4:	38 f0       	brcs	.+14     	; 0x17c4 <__addsf3+0x20>
    17b6:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <__fp_pscB>
    17ba:	20 f0       	brcs	.+8      	; 0x17c4 <__addsf3+0x20>
    17bc:	39 f4       	brne	.+14     	; 0x17cc <__addsf3+0x28>
    17be:	9f 3f       	cpi	r25, 0xFF	; 255
    17c0:	19 f4       	brne	.+6      	; 0x17c8 <__addsf3+0x24>
    17c2:	26 f4       	brtc	.+8      	; 0x17cc <__addsf3+0x28>
    17c4:	0c 94 52 0d 	jmp	0x1aa4	; 0x1aa4 <__fp_nan>
    17c8:	0e f4       	brtc	.+2      	; 0x17cc <__addsf3+0x28>
    17ca:	e0 95       	com	r30
    17cc:	e7 fb       	bst	r30, 7
    17ce:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_inf>

000017d2 <__addsf3x>:
    17d2:	e9 2f       	mov	r30, r25
    17d4:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__fp_split3>
    17d8:	58 f3       	brcs	.-42     	; 0x17b0 <__addsf3+0xc>
    17da:	ba 17       	cp	r27, r26
    17dc:	62 07       	cpc	r22, r18
    17de:	73 07       	cpc	r23, r19
    17e0:	84 07       	cpc	r24, r20
    17e2:	95 07       	cpc	r25, r21
    17e4:	20 f0       	brcs	.+8      	; 0x17ee <__addsf3x+0x1c>
    17e6:	79 f4       	brne	.+30     	; 0x1806 <__addsf3x+0x34>
    17e8:	a6 f5       	brtc	.+104    	; 0x1852 <__addsf3x+0x80>
    17ea:	0c 94 96 0d 	jmp	0x1b2c	; 0x1b2c <__fp_zero>
    17ee:	0e f4       	brtc	.+2      	; 0x17f2 <__addsf3x+0x20>
    17f0:	e0 95       	com	r30
    17f2:	0b 2e       	mov	r0, r27
    17f4:	ba 2f       	mov	r27, r26
    17f6:	a0 2d       	mov	r26, r0
    17f8:	0b 01       	movw	r0, r22
    17fa:	b9 01       	movw	r22, r18
    17fc:	90 01       	movw	r18, r0
    17fe:	0c 01       	movw	r0, r24
    1800:	ca 01       	movw	r24, r20
    1802:	a0 01       	movw	r20, r0
    1804:	11 24       	eor	r1, r1
    1806:	ff 27       	eor	r31, r31
    1808:	59 1b       	sub	r21, r25
    180a:	99 f0       	breq	.+38     	; 0x1832 <__addsf3x+0x60>
    180c:	59 3f       	cpi	r21, 0xF9	; 249
    180e:	50 f4       	brcc	.+20     	; 0x1824 <__addsf3x+0x52>
    1810:	50 3e       	cpi	r21, 0xE0	; 224
    1812:	68 f1       	brcs	.+90     	; 0x186e <__addsf3x+0x9c>
    1814:	1a 16       	cp	r1, r26
    1816:	f0 40       	sbci	r31, 0x00	; 0
    1818:	a2 2f       	mov	r26, r18
    181a:	23 2f       	mov	r18, r19
    181c:	34 2f       	mov	r19, r20
    181e:	44 27       	eor	r20, r20
    1820:	58 5f       	subi	r21, 0xF8	; 248
    1822:	f3 cf       	rjmp	.-26     	; 0x180a <__addsf3x+0x38>
    1824:	46 95       	lsr	r20
    1826:	37 95       	ror	r19
    1828:	27 95       	ror	r18
    182a:	a7 95       	ror	r26
    182c:	f0 40       	sbci	r31, 0x00	; 0
    182e:	53 95       	inc	r21
    1830:	c9 f7       	brne	.-14     	; 0x1824 <__addsf3x+0x52>
    1832:	7e f4       	brtc	.+30     	; 0x1852 <__addsf3x+0x80>
    1834:	1f 16       	cp	r1, r31
    1836:	ba 0b       	sbc	r27, r26
    1838:	62 0b       	sbc	r22, r18
    183a:	73 0b       	sbc	r23, r19
    183c:	84 0b       	sbc	r24, r20
    183e:	ba f0       	brmi	.+46     	; 0x186e <__addsf3x+0x9c>
    1840:	91 50       	subi	r25, 0x01	; 1
    1842:	a1 f0       	breq	.+40     	; 0x186c <__addsf3x+0x9a>
    1844:	ff 0f       	add	r31, r31
    1846:	bb 1f       	adc	r27, r27
    1848:	66 1f       	adc	r22, r22
    184a:	77 1f       	adc	r23, r23
    184c:	88 1f       	adc	r24, r24
    184e:	c2 f7       	brpl	.-16     	; 0x1840 <__addsf3x+0x6e>
    1850:	0e c0       	rjmp	.+28     	; 0x186e <__addsf3x+0x9c>
    1852:	ba 0f       	add	r27, r26
    1854:	62 1f       	adc	r22, r18
    1856:	73 1f       	adc	r23, r19
    1858:	84 1f       	adc	r24, r20
    185a:	48 f4       	brcc	.+18     	; 0x186e <__addsf3x+0x9c>
    185c:	87 95       	ror	r24
    185e:	77 95       	ror	r23
    1860:	67 95       	ror	r22
    1862:	b7 95       	ror	r27
    1864:	f7 95       	ror	r31
    1866:	9e 3f       	cpi	r25, 0xFE	; 254
    1868:	08 f0       	brcs	.+2      	; 0x186c <__addsf3x+0x9a>
    186a:	b0 cf       	rjmp	.-160    	; 0x17cc <__addsf3+0x28>
    186c:	93 95       	inc	r25
    186e:	88 0f       	add	r24, r24
    1870:	08 f0       	brcs	.+2      	; 0x1874 <__addsf3x+0xa2>
    1872:	99 27       	eor	r25, r25
    1874:	ee 0f       	add	r30, r30
    1876:	97 95       	ror	r25
    1878:	87 95       	ror	r24
    187a:	08 95       	ret

0000187c <__cmpsf2>:
    187c:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <__fp_cmp>
    1880:	08 f4       	brcc	.+2      	; 0x1884 <__cmpsf2+0x8>
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	08 95       	ret

00001886 <__divsf3>:
    1886:	0e 94 57 0c 	call	0x18ae	; 0x18ae <__divsf3x>
    188a:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__fp_round>
    188e:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <__fp_pscB>
    1892:	58 f0       	brcs	.+22     	; 0x18aa <__divsf3+0x24>
    1894:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__fp_pscA>
    1898:	40 f0       	brcs	.+16     	; 0x18aa <__divsf3+0x24>
    189a:	29 f4       	brne	.+10     	; 0x18a6 <__divsf3+0x20>
    189c:	5f 3f       	cpi	r21, 0xFF	; 255
    189e:	29 f0       	breq	.+10     	; 0x18aa <__divsf3+0x24>
    18a0:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_inf>
    18a4:	51 11       	cpse	r21, r1
    18a6:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__fp_szero>
    18aa:	0c 94 52 0d 	jmp	0x1aa4	; 0x1aa4 <__fp_nan>

000018ae <__divsf3x>:
    18ae:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__fp_split3>
    18b2:	68 f3       	brcs	.-38     	; 0x188e <__divsf3+0x8>

000018b4 <__divsf3_pse>:
    18b4:	99 23       	and	r25, r25
    18b6:	b1 f3       	breq	.-20     	; 0x18a4 <__divsf3+0x1e>
    18b8:	55 23       	and	r21, r21
    18ba:	91 f3       	breq	.-28     	; 0x18a0 <__divsf3+0x1a>
    18bc:	95 1b       	sub	r25, r21
    18be:	55 0b       	sbc	r21, r21
    18c0:	bb 27       	eor	r27, r27
    18c2:	aa 27       	eor	r26, r26
    18c4:	62 17       	cp	r22, r18
    18c6:	73 07       	cpc	r23, r19
    18c8:	84 07       	cpc	r24, r20
    18ca:	38 f0       	brcs	.+14     	; 0x18da <__divsf3_pse+0x26>
    18cc:	9f 5f       	subi	r25, 0xFF	; 255
    18ce:	5f 4f       	sbci	r21, 0xFF	; 255
    18d0:	22 0f       	add	r18, r18
    18d2:	33 1f       	adc	r19, r19
    18d4:	44 1f       	adc	r20, r20
    18d6:	aa 1f       	adc	r26, r26
    18d8:	a9 f3       	breq	.-22     	; 0x18c4 <__divsf3_pse+0x10>
    18da:	35 d0       	rcall	.+106    	; 0x1946 <__divsf3_pse+0x92>
    18dc:	0e 2e       	mov	r0, r30
    18de:	3a f0       	brmi	.+14     	; 0x18ee <__divsf3_pse+0x3a>
    18e0:	e0 e8       	ldi	r30, 0x80	; 128
    18e2:	32 d0       	rcall	.+100    	; 0x1948 <__divsf3_pse+0x94>
    18e4:	91 50       	subi	r25, 0x01	; 1
    18e6:	50 40       	sbci	r21, 0x00	; 0
    18e8:	e6 95       	lsr	r30
    18ea:	00 1c       	adc	r0, r0
    18ec:	ca f7       	brpl	.-14     	; 0x18e0 <__divsf3_pse+0x2c>
    18ee:	2b d0       	rcall	.+86     	; 0x1946 <__divsf3_pse+0x92>
    18f0:	fe 2f       	mov	r31, r30
    18f2:	29 d0       	rcall	.+82     	; 0x1946 <__divsf3_pse+0x92>
    18f4:	66 0f       	add	r22, r22
    18f6:	77 1f       	adc	r23, r23
    18f8:	88 1f       	adc	r24, r24
    18fa:	bb 1f       	adc	r27, r27
    18fc:	26 17       	cp	r18, r22
    18fe:	37 07       	cpc	r19, r23
    1900:	48 07       	cpc	r20, r24
    1902:	ab 07       	cpc	r26, r27
    1904:	b0 e8       	ldi	r27, 0x80	; 128
    1906:	09 f0       	breq	.+2      	; 0x190a <__divsf3_pse+0x56>
    1908:	bb 0b       	sbc	r27, r27
    190a:	80 2d       	mov	r24, r0
    190c:	bf 01       	movw	r22, r30
    190e:	ff 27       	eor	r31, r31
    1910:	93 58       	subi	r25, 0x83	; 131
    1912:	5f 4f       	sbci	r21, 0xFF	; 255
    1914:	3a f0       	brmi	.+14     	; 0x1924 <__divsf3_pse+0x70>
    1916:	9e 3f       	cpi	r25, 0xFE	; 254
    1918:	51 05       	cpc	r21, r1
    191a:	78 f0       	brcs	.+30     	; 0x193a <__divsf3_pse+0x86>
    191c:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_inf>
    1920:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__fp_szero>
    1924:	5f 3f       	cpi	r21, 0xFF	; 255
    1926:	e4 f3       	brlt	.-8      	; 0x1920 <__divsf3_pse+0x6c>
    1928:	98 3e       	cpi	r25, 0xE8	; 232
    192a:	d4 f3       	brlt	.-12     	; 0x1920 <__divsf3_pse+0x6c>
    192c:	86 95       	lsr	r24
    192e:	77 95       	ror	r23
    1930:	67 95       	ror	r22
    1932:	b7 95       	ror	r27
    1934:	f7 95       	ror	r31
    1936:	9f 5f       	subi	r25, 0xFF	; 255
    1938:	c9 f7       	brne	.-14     	; 0x192c <__divsf3_pse+0x78>
    193a:	88 0f       	add	r24, r24
    193c:	91 1d       	adc	r25, r1
    193e:	96 95       	lsr	r25
    1940:	87 95       	ror	r24
    1942:	97 f9       	bld	r25, 7
    1944:	08 95       	ret
    1946:	e1 e0       	ldi	r30, 0x01	; 1
    1948:	66 0f       	add	r22, r22
    194a:	77 1f       	adc	r23, r23
    194c:	88 1f       	adc	r24, r24
    194e:	bb 1f       	adc	r27, r27
    1950:	62 17       	cp	r22, r18
    1952:	73 07       	cpc	r23, r19
    1954:	84 07       	cpc	r24, r20
    1956:	ba 07       	cpc	r27, r26
    1958:	20 f0       	brcs	.+8      	; 0x1962 <__divsf3_pse+0xae>
    195a:	62 1b       	sub	r22, r18
    195c:	73 0b       	sbc	r23, r19
    195e:	84 0b       	sbc	r24, r20
    1960:	ba 0b       	sbc	r27, r26
    1962:	ee 1f       	adc	r30, r30
    1964:	88 f7       	brcc	.-30     	; 0x1948 <__divsf3_pse+0x94>
    1966:	e0 95       	com	r30
    1968:	08 95       	ret

0000196a <__fixsfsi>:
    196a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__fixunssfsi>
    196e:	68 94       	set
    1970:	b1 11       	cpse	r27, r1
    1972:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__fp_szero>
    1976:	08 95       	ret

00001978 <__fixunssfsi>:
    1978:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__fp_splitA>
    197c:	88 f0       	brcs	.+34     	; 0x19a0 <__fixunssfsi+0x28>
    197e:	9f 57       	subi	r25, 0x7F	; 127
    1980:	98 f0       	brcs	.+38     	; 0x19a8 <__fixunssfsi+0x30>
    1982:	b9 2f       	mov	r27, r25
    1984:	99 27       	eor	r25, r25
    1986:	b7 51       	subi	r27, 0x17	; 23
    1988:	b0 f0       	brcs	.+44     	; 0x19b6 <__fixunssfsi+0x3e>
    198a:	e1 f0       	breq	.+56     	; 0x19c4 <__fixunssfsi+0x4c>
    198c:	66 0f       	add	r22, r22
    198e:	77 1f       	adc	r23, r23
    1990:	88 1f       	adc	r24, r24
    1992:	99 1f       	adc	r25, r25
    1994:	1a f0       	brmi	.+6      	; 0x199c <__fixunssfsi+0x24>
    1996:	ba 95       	dec	r27
    1998:	c9 f7       	brne	.-14     	; 0x198c <__fixunssfsi+0x14>
    199a:	14 c0       	rjmp	.+40     	; 0x19c4 <__fixunssfsi+0x4c>
    199c:	b1 30       	cpi	r27, 0x01	; 1
    199e:	91 f0       	breq	.+36     	; 0x19c4 <__fixunssfsi+0x4c>
    19a0:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <__fp_zero>
    19a4:	b1 e0       	ldi	r27, 0x01	; 1
    19a6:	08 95       	ret
    19a8:	0c 94 96 0d 	jmp	0x1b2c	; 0x1b2c <__fp_zero>
    19ac:	67 2f       	mov	r22, r23
    19ae:	78 2f       	mov	r23, r24
    19b0:	88 27       	eor	r24, r24
    19b2:	b8 5f       	subi	r27, 0xF8	; 248
    19b4:	39 f0       	breq	.+14     	; 0x19c4 <__fixunssfsi+0x4c>
    19b6:	b9 3f       	cpi	r27, 0xF9	; 249
    19b8:	cc f3       	brlt	.-14     	; 0x19ac <__fixunssfsi+0x34>
    19ba:	86 95       	lsr	r24
    19bc:	77 95       	ror	r23
    19be:	67 95       	ror	r22
    19c0:	b3 95       	inc	r27
    19c2:	d9 f7       	brne	.-10     	; 0x19ba <__fixunssfsi+0x42>
    19c4:	3e f4       	brtc	.+14     	; 0x19d4 <__fixunssfsi+0x5c>
    19c6:	90 95       	com	r25
    19c8:	80 95       	com	r24
    19ca:	70 95       	com	r23
    19cc:	61 95       	neg	r22
    19ce:	7f 4f       	sbci	r23, 0xFF	; 255
    19d0:	8f 4f       	sbci	r24, 0xFF	; 255
    19d2:	9f 4f       	sbci	r25, 0xFF	; 255
    19d4:	08 95       	ret

000019d6 <__floatunsisf>:
    19d6:	e8 94       	clt
    19d8:	09 c0       	rjmp	.+18     	; 0x19ec <__floatsisf+0x12>

000019da <__floatsisf>:
    19da:	97 fb       	bst	r25, 7
    19dc:	3e f4       	brtc	.+14     	; 0x19ec <__floatsisf+0x12>
    19de:	90 95       	com	r25
    19e0:	80 95       	com	r24
    19e2:	70 95       	com	r23
    19e4:	61 95       	neg	r22
    19e6:	7f 4f       	sbci	r23, 0xFF	; 255
    19e8:	8f 4f       	sbci	r24, 0xFF	; 255
    19ea:	9f 4f       	sbci	r25, 0xFF	; 255
    19ec:	99 23       	and	r25, r25
    19ee:	a9 f0       	breq	.+42     	; 0x1a1a <__floatsisf+0x40>
    19f0:	f9 2f       	mov	r31, r25
    19f2:	96 e9       	ldi	r25, 0x96	; 150
    19f4:	bb 27       	eor	r27, r27
    19f6:	93 95       	inc	r25
    19f8:	f6 95       	lsr	r31
    19fa:	87 95       	ror	r24
    19fc:	77 95       	ror	r23
    19fe:	67 95       	ror	r22
    1a00:	b7 95       	ror	r27
    1a02:	f1 11       	cpse	r31, r1
    1a04:	f8 cf       	rjmp	.-16     	; 0x19f6 <__floatsisf+0x1c>
    1a06:	fa f4       	brpl	.+62     	; 0x1a46 <__floatsisf+0x6c>
    1a08:	bb 0f       	add	r27, r27
    1a0a:	11 f4       	brne	.+4      	; 0x1a10 <__floatsisf+0x36>
    1a0c:	60 ff       	sbrs	r22, 0
    1a0e:	1b c0       	rjmp	.+54     	; 0x1a46 <__floatsisf+0x6c>
    1a10:	6f 5f       	subi	r22, 0xFF	; 255
    1a12:	7f 4f       	sbci	r23, 0xFF	; 255
    1a14:	8f 4f       	sbci	r24, 0xFF	; 255
    1a16:	9f 4f       	sbci	r25, 0xFF	; 255
    1a18:	16 c0       	rjmp	.+44     	; 0x1a46 <__floatsisf+0x6c>
    1a1a:	88 23       	and	r24, r24
    1a1c:	11 f0       	breq	.+4      	; 0x1a22 <__floatsisf+0x48>
    1a1e:	96 e9       	ldi	r25, 0x96	; 150
    1a20:	11 c0       	rjmp	.+34     	; 0x1a44 <__floatsisf+0x6a>
    1a22:	77 23       	and	r23, r23
    1a24:	21 f0       	breq	.+8      	; 0x1a2e <__floatsisf+0x54>
    1a26:	9e e8       	ldi	r25, 0x8E	; 142
    1a28:	87 2f       	mov	r24, r23
    1a2a:	76 2f       	mov	r23, r22
    1a2c:	05 c0       	rjmp	.+10     	; 0x1a38 <__floatsisf+0x5e>
    1a2e:	66 23       	and	r22, r22
    1a30:	71 f0       	breq	.+28     	; 0x1a4e <__floatsisf+0x74>
    1a32:	96 e8       	ldi	r25, 0x86	; 134
    1a34:	86 2f       	mov	r24, r22
    1a36:	70 e0       	ldi	r23, 0x00	; 0
    1a38:	60 e0       	ldi	r22, 0x00	; 0
    1a3a:	2a f0       	brmi	.+10     	; 0x1a46 <__floatsisf+0x6c>
    1a3c:	9a 95       	dec	r25
    1a3e:	66 0f       	add	r22, r22
    1a40:	77 1f       	adc	r23, r23
    1a42:	88 1f       	adc	r24, r24
    1a44:	da f7       	brpl	.-10     	; 0x1a3c <__floatsisf+0x62>
    1a46:	88 0f       	add	r24, r24
    1a48:	96 95       	lsr	r25
    1a4a:	87 95       	ror	r24
    1a4c:	97 f9       	bld	r25, 7
    1a4e:	08 95       	ret

00001a50 <__fp_cmp>:
    1a50:	99 0f       	add	r25, r25
    1a52:	00 08       	sbc	r0, r0
    1a54:	55 0f       	add	r21, r21
    1a56:	aa 0b       	sbc	r26, r26
    1a58:	e0 e8       	ldi	r30, 0x80	; 128
    1a5a:	fe ef       	ldi	r31, 0xFE	; 254
    1a5c:	16 16       	cp	r1, r22
    1a5e:	17 06       	cpc	r1, r23
    1a60:	e8 07       	cpc	r30, r24
    1a62:	f9 07       	cpc	r31, r25
    1a64:	c0 f0       	brcs	.+48     	; 0x1a96 <__fp_cmp+0x46>
    1a66:	12 16       	cp	r1, r18
    1a68:	13 06       	cpc	r1, r19
    1a6a:	e4 07       	cpc	r30, r20
    1a6c:	f5 07       	cpc	r31, r21
    1a6e:	98 f0       	brcs	.+38     	; 0x1a96 <__fp_cmp+0x46>
    1a70:	62 1b       	sub	r22, r18
    1a72:	73 0b       	sbc	r23, r19
    1a74:	84 0b       	sbc	r24, r20
    1a76:	95 0b       	sbc	r25, r21
    1a78:	39 f4       	brne	.+14     	; 0x1a88 <__fp_cmp+0x38>
    1a7a:	0a 26       	eor	r0, r26
    1a7c:	61 f0       	breq	.+24     	; 0x1a96 <__fp_cmp+0x46>
    1a7e:	23 2b       	or	r18, r19
    1a80:	24 2b       	or	r18, r20
    1a82:	25 2b       	or	r18, r21
    1a84:	21 f4       	brne	.+8      	; 0x1a8e <__fp_cmp+0x3e>
    1a86:	08 95       	ret
    1a88:	0a 26       	eor	r0, r26
    1a8a:	09 f4       	brne	.+2      	; 0x1a8e <__fp_cmp+0x3e>
    1a8c:	a1 40       	sbci	r26, 0x01	; 1
    1a8e:	a6 95       	lsr	r26
    1a90:	8f ef       	ldi	r24, 0xFF	; 255
    1a92:	81 1d       	adc	r24, r1
    1a94:	81 1d       	adc	r24, r1
    1a96:	08 95       	ret

00001a98 <__fp_inf>:
    1a98:	97 f9       	bld	r25, 7
    1a9a:	9f 67       	ori	r25, 0x7F	; 127
    1a9c:	80 e8       	ldi	r24, 0x80	; 128
    1a9e:	70 e0       	ldi	r23, 0x00	; 0
    1aa0:	60 e0       	ldi	r22, 0x00	; 0
    1aa2:	08 95       	ret

00001aa4 <__fp_nan>:
    1aa4:	9f ef       	ldi	r25, 0xFF	; 255
    1aa6:	80 ec       	ldi	r24, 0xC0	; 192
    1aa8:	08 95       	ret

00001aaa <__fp_pscA>:
    1aaa:	00 24       	eor	r0, r0
    1aac:	0a 94       	dec	r0
    1aae:	16 16       	cp	r1, r22
    1ab0:	17 06       	cpc	r1, r23
    1ab2:	18 06       	cpc	r1, r24
    1ab4:	09 06       	cpc	r0, r25
    1ab6:	08 95       	ret

00001ab8 <__fp_pscB>:
    1ab8:	00 24       	eor	r0, r0
    1aba:	0a 94       	dec	r0
    1abc:	12 16       	cp	r1, r18
    1abe:	13 06       	cpc	r1, r19
    1ac0:	14 06       	cpc	r1, r20
    1ac2:	05 06       	cpc	r0, r21
    1ac4:	08 95       	ret

00001ac6 <__fp_round>:
    1ac6:	09 2e       	mov	r0, r25
    1ac8:	03 94       	inc	r0
    1aca:	00 0c       	add	r0, r0
    1acc:	11 f4       	brne	.+4      	; 0x1ad2 <__fp_round+0xc>
    1ace:	88 23       	and	r24, r24
    1ad0:	52 f0       	brmi	.+20     	; 0x1ae6 <__fp_round+0x20>
    1ad2:	bb 0f       	add	r27, r27
    1ad4:	40 f4       	brcc	.+16     	; 0x1ae6 <__fp_round+0x20>
    1ad6:	bf 2b       	or	r27, r31
    1ad8:	11 f4       	brne	.+4      	; 0x1ade <__fp_round+0x18>
    1ada:	60 ff       	sbrs	r22, 0
    1adc:	04 c0       	rjmp	.+8      	; 0x1ae6 <__fp_round+0x20>
    1ade:	6f 5f       	subi	r22, 0xFF	; 255
    1ae0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae6:	08 95       	ret

00001ae8 <__fp_split3>:
    1ae8:	57 fd       	sbrc	r21, 7
    1aea:	90 58       	subi	r25, 0x80	; 128
    1aec:	44 0f       	add	r20, r20
    1aee:	55 1f       	adc	r21, r21
    1af0:	59 f0       	breq	.+22     	; 0x1b08 <__fp_splitA+0x10>
    1af2:	5f 3f       	cpi	r21, 0xFF	; 255
    1af4:	71 f0       	breq	.+28     	; 0x1b12 <__fp_splitA+0x1a>
    1af6:	47 95       	ror	r20

00001af8 <__fp_splitA>:
    1af8:	88 0f       	add	r24, r24
    1afa:	97 fb       	bst	r25, 7
    1afc:	99 1f       	adc	r25, r25
    1afe:	61 f0       	breq	.+24     	; 0x1b18 <__fp_splitA+0x20>
    1b00:	9f 3f       	cpi	r25, 0xFF	; 255
    1b02:	79 f0       	breq	.+30     	; 0x1b22 <__fp_splitA+0x2a>
    1b04:	87 95       	ror	r24
    1b06:	08 95       	ret
    1b08:	12 16       	cp	r1, r18
    1b0a:	13 06       	cpc	r1, r19
    1b0c:	14 06       	cpc	r1, r20
    1b0e:	55 1f       	adc	r21, r21
    1b10:	f2 cf       	rjmp	.-28     	; 0x1af6 <__fp_split3+0xe>
    1b12:	46 95       	lsr	r20
    1b14:	f1 df       	rcall	.-30     	; 0x1af8 <__fp_splitA>
    1b16:	08 c0       	rjmp	.+16     	; 0x1b28 <__fp_splitA+0x30>
    1b18:	16 16       	cp	r1, r22
    1b1a:	17 06       	cpc	r1, r23
    1b1c:	18 06       	cpc	r1, r24
    1b1e:	99 1f       	adc	r25, r25
    1b20:	f1 cf       	rjmp	.-30     	; 0x1b04 <__fp_splitA+0xc>
    1b22:	86 95       	lsr	r24
    1b24:	71 05       	cpc	r23, r1
    1b26:	61 05       	cpc	r22, r1
    1b28:	08 94       	sec
    1b2a:	08 95       	ret

00001b2c <__fp_zero>:
    1b2c:	e8 94       	clt

00001b2e <__fp_szero>:
    1b2e:	bb 27       	eor	r27, r27
    1b30:	66 27       	eor	r22, r22
    1b32:	77 27       	eor	r23, r23
    1b34:	cb 01       	movw	r24, r22
    1b36:	97 f9       	bld	r25, 7
    1b38:	08 95       	ret

00001b3a <__gesf2>:
    1b3a:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <__fp_cmp>
    1b3e:	08 f4       	brcc	.+2      	; 0x1b42 <__gesf2+0x8>
    1b40:	8f ef       	ldi	r24, 0xFF	; 255
    1b42:	08 95       	ret

00001b44 <__mulsf3>:
    1b44:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <__mulsf3x>
    1b48:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__fp_round>
    1b4c:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__fp_pscA>
    1b50:	38 f0       	brcs	.+14     	; 0x1b60 <__mulsf3+0x1c>
    1b52:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <__fp_pscB>
    1b56:	20 f0       	brcs	.+8      	; 0x1b60 <__mulsf3+0x1c>
    1b58:	95 23       	and	r25, r21
    1b5a:	11 f0       	breq	.+4      	; 0x1b60 <__mulsf3+0x1c>
    1b5c:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_inf>
    1b60:	0c 94 52 0d 	jmp	0x1aa4	; 0x1aa4 <__fp_nan>
    1b64:	11 24       	eor	r1, r1
    1b66:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__fp_szero>

00001b6a <__mulsf3x>:
    1b6a:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__fp_split3>
    1b6e:	70 f3       	brcs	.-36     	; 0x1b4c <__mulsf3+0x8>

00001b70 <__mulsf3_pse>:
    1b70:	95 9f       	mul	r25, r21
    1b72:	c1 f3       	breq	.-16     	; 0x1b64 <__mulsf3+0x20>
    1b74:	95 0f       	add	r25, r21
    1b76:	50 e0       	ldi	r21, 0x00	; 0
    1b78:	55 1f       	adc	r21, r21
    1b7a:	62 9f       	mul	r22, r18
    1b7c:	f0 01       	movw	r30, r0
    1b7e:	72 9f       	mul	r23, r18
    1b80:	bb 27       	eor	r27, r27
    1b82:	f0 0d       	add	r31, r0
    1b84:	b1 1d       	adc	r27, r1
    1b86:	63 9f       	mul	r22, r19
    1b88:	aa 27       	eor	r26, r26
    1b8a:	f0 0d       	add	r31, r0
    1b8c:	b1 1d       	adc	r27, r1
    1b8e:	aa 1f       	adc	r26, r26
    1b90:	64 9f       	mul	r22, r20
    1b92:	66 27       	eor	r22, r22
    1b94:	b0 0d       	add	r27, r0
    1b96:	a1 1d       	adc	r26, r1
    1b98:	66 1f       	adc	r22, r22
    1b9a:	82 9f       	mul	r24, r18
    1b9c:	22 27       	eor	r18, r18
    1b9e:	b0 0d       	add	r27, r0
    1ba0:	a1 1d       	adc	r26, r1
    1ba2:	62 1f       	adc	r22, r18
    1ba4:	73 9f       	mul	r23, r19
    1ba6:	b0 0d       	add	r27, r0
    1ba8:	a1 1d       	adc	r26, r1
    1baa:	62 1f       	adc	r22, r18
    1bac:	83 9f       	mul	r24, r19
    1bae:	a0 0d       	add	r26, r0
    1bb0:	61 1d       	adc	r22, r1
    1bb2:	22 1f       	adc	r18, r18
    1bb4:	74 9f       	mul	r23, r20
    1bb6:	33 27       	eor	r19, r19
    1bb8:	a0 0d       	add	r26, r0
    1bba:	61 1d       	adc	r22, r1
    1bbc:	23 1f       	adc	r18, r19
    1bbe:	84 9f       	mul	r24, r20
    1bc0:	60 0d       	add	r22, r0
    1bc2:	21 1d       	adc	r18, r1
    1bc4:	82 2f       	mov	r24, r18
    1bc6:	76 2f       	mov	r23, r22
    1bc8:	6a 2f       	mov	r22, r26
    1bca:	11 24       	eor	r1, r1
    1bcc:	9f 57       	subi	r25, 0x7F	; 127
    1bce:	50 40       	sbci	r21, 0x00	; 0
    1bd0:	9a f0       	brmi	.+38     	; 0x1bf8 <__mulsf3_pse+0x88>
    1bd2:	f1 f0       	breq	.+60     	; 0x1c10 <__mulsf3_pse+0xa0>
    1bd4:	88 23       	and	r24, r24
    1bd6:	4a f0       	brmi	.+18     	; 0x1bea <__mulsf3_pse+0x7a>
    1bd8:	ee 0f       	add	r30, r30
    1bda:	ff 1f       	adc	r31, r31
    1bdc:	bb 1f       	adc	r27, r27
    1bde:	66 1f       	adc	r22, r22
    1be0:	77 1f       	adc	r23, r23
    1be2:	88 1f       	adc	r24, r24
    1be4:	91 50       	subi	r25, 0x01	; 1
    1be6:	50 40       	sbci	r21, 0x00	; 0
    1be8:	a9 f7       	brne	.-22     	; 0x1bd4 <__mulsf3_pse+0x64>
    1bea:	9e 3f       	cpi	r25, 0xFE	; 254
    1bec:	51 05       	cpc	r21, r1
    1bee:	80 f0       	brcs	.+32     	; 0x1c10 <__mulsf3_pse+0xa0>
    1bf0:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_inf>
    1bf4:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__fp_szero>
    1bf8:	5f 3f       	cpi	r21, 0xFF	; 255
    1bfa:	e4 f3       	brlt	.-8      	; 0x1bf4 <__mulsf3_pse+0x84>
    1bfc:	98 3e       	cpi	r25, 0xE8	; 232
    1bfe:	d4 f3       	brlt	.-12     	; 0x1bf4 <__mulsf3_pse+0x84>
    1c00:	86 95       	lsr	r24
    1c02:	77 95       	ror	r23
    1c04:	67 95       	ror	r22
    1c06:	b7 95       	ror	r27
    1c08:	f7 95       	ror	r31
    1c0a:	e7 95       	ror	r30
    1c0c:	9f 5f       	subi	r25, 0xFF	; 255
    1c0e:	c1 f7       	brne	.-16     	; 0x1c00 <__mulsf3_pse+0x90>
    1c10:	fe 2b       	or	r31, r30
    1c12:	88 0f       	add	r24, r24
    1c14:	91 1d       	adc	r25, r1
    1c16:	96 95       	lsr	r25
    1c18:	87 95       	ror	r24
    1c1a:	97 f9       	bld	r25, 7
    1c1c:	08 95       	ret

00001c1e <__divmodhi4>:
    1c1e:	97 fb       	bst	r25, 7
    1c20:	07 2e       	mov	r0, r23
    1c22:	16 f4       	brtc	.+4      	; 0x1c28 <__divmodhi4+0xa>
    1c24:	00 94       	com	r0
    1c26:	07 d0       	rcall	.+14     	; 0x1c36 <__divmodhi4_neg1>
    1c28:	77 fd       	sbrc	r23, 7
    1c2a:	09 d0       	rcall	.+18     	; 0x1c3e <__divmodhi4_neg2>
    1c2c:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__udivmodhi4>
    1c30:	07 fc       	sbrc	r0, 7
    1c32:	05 d0       	rcall	.+10     	; 0x1c3e <__divmodhi4_neg2>
    1c34:	3e f4       	brtc	.+14     	; 0x1c44 <__divmodhi4_exit>

00001c36 <__divmodhi4_neg1>:
    1c36:	90 95       	com	r25
    1c38:	81 95       	neg	r24
    1c3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c3c:	08 95       	ret

00001c3e <__divmodhi4_neg2>:
    1c3e:	70 95       	com	r23
    1c40:	61 95       	neg	r22
    1c42:	7f 4f       	sbci	r23, 0xFF	; 255

00001c44 <__divmodhi4_exit>:
    1c44:	08 95       	ret

00001c46 <__udivmodhi4>:
    1c46:	aa 1b       	sub	r26, r26
    1c48:	bb 1b       	sub	r27, r27
    1c4a:	51 e1       	ldi	r21, 0x11	; 17
    1c4c:	07 c0       	rjmp	.+14     	; 0x1c5c <__udivmodhi4_ep>

00001c4e <__udivmodhi4_loop>:
    1c4e:	aa 1f       	adc	r26, r26
    1c50:	bb 1f       	adc	r27, r27
    1c52:	a6 17       	cp	r26, r22
    1c54:	b7 07       	cpc	r27, r23
    1c56:	10 f0       	brcs	.+4      	; 0x1c5c <__udivmodhi4_ep>
    1c58:	a6 1b       	sub	r26, r22
    1c5a:	b7 0b       	sbc	r27, r23

00001c5c <__udivmodhi4_ep>:
    1c5c:	88 1f       	adc	r24, r24
    1c5e:	99 1f       	adc	r25, r25
    1c60:	5a 95       	dec	r21
    1c62:	a9 f7       	brne	.-22     	; 0x1c4e <__udivmodhi4_loop>
    1c64:	80 95       	com	r24
    1c66:	90 95       	com	r25
    1c68:	bc 01       	movw	r22, r24
    1c6a:	cd 01       	movw	r24, r26
    1c6c:	08 95       	ret

00001c6e <_exit>:
    1c6e:	f8 94       	cli

00001c70 <__stop_program>:
    1c70:	ff cf       	rjmp	.-2      	; 0x1c70 <__stop_program>
